{"ast":null,"code":"var _jsxFileName = \"/home/senzo/VS Code/sdp_1/src/Quicksort.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Quicksort.css\";\n\n// Add this function definition before the component definition\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuickSortVisualizer = () => {\n  _s();\n  const [array, setArray] = useState(generateRandomArray(15));\n  const [pivot, setPivot] = useState(null);\n  const [comparing, setComparing] = useState([]);\n  const [isSorting, setIsSorting] = useState(false);\n  const isSorted = (array, index) => {\n    return index < array.length - 1 && array[index] <= array[index + 1];\n  };\n  const generateRandomArray = size => {\n    const array = [];\n    for (let i = 0; i < size; i++) {\n      array.push(Math.floor(Math.random() * 101));\n    }\n    return array;\n  };\n  const quickSort = (array, start, end) => {\n    if (start >= end) {\n      return;\n    }\n    setPivot(array[end]);\n    const pivotIndex = partition(array, start, end);\n    quickSort(array, start, pivotIndex - 1);\n    quickSort(array, pivotIndex + 1, end);\n  };\n  const partition = (array, start, end) => {\n    const pivot = array[end];\n    let pivotIndex = start;\n    for (let i = start; i < end; i++) {\n      if (array[i] <= pivot) {\n        setComparing([array[i], pivot]);\n        [array[i], array[pivotIndex]] = [array[pivotIndex], array[i]];\n        pivotIndex++;\n      }\n    }\n    [array[pivotIndex], array[end]] = [array[end], array[pivotIndex]];\n    return pivotIndex;\n  };\n  const handleSort = () => {\n    setIsSorting(true);\n    const newArray = [...array];\n    quickSort(newArray, 0, newArray.length - 1);\n    setArray(newArray);\n    setIsSorting(false);\n  };\n  const handlePause = () => {\n    setIsSorting(false);\n  };\n  const handleResume = () => {\n    setIsSorting(true);\n    handleSort();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSort,\n      children: \"Sort\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePause,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleResume,\n      children: \"Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: array.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `number ${index === pivot ? \"pivot\" : \"\"} ${isSorted(array, index) ? \"sorted\" : \"\"} ${comparing.includes(num) ? \"comparing\" : \"\"}`,\n        onClick: () => setPivot(index),\n        children: num\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(QuickSortVisualizer, \"hg9koaQOzM29VmaBT3LnZNvYT1w=\");\n_c = QuickSortVisualizer;\nexport default QuickSortVisualizer;\nvar _c;\n$RefreshReg$(_c, \"QuickSortVisualizer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuickSortVisualizer","_s","array","setArray","generateRandomArray","pivot","setPivot","comparing","setComparing","isSorting","setIsSorting","isSorted","index","length","size","i","push","Math","floor","random","quickSort","start","end","pivotIndex","partition","handleSort","newArray","handlePause","handleResume","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","num","className","includes","_c","$RefreshReg$"],"sources":["/home/senzo/VS Code/sdp_1/src/Quicksort.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Quicksort.css\";\n\n// Add this function definition before the component definition\n\n\nconst QuickSortVisualizer = () => {\n  const [array, setArray] = useState(generateRandomArray(15));\n  const [pivot, setPivot] = useState(null);\n  const [comparing, setComparing] = useState([]);\n  const [isSorting, setIsSorting] = useState(false);\n  const isSorted = (array, index) => {\n  return index < array.length - 1 && array[index] <= array[index + 1];\n};\n\n  const generateRandomArray = (size) => {\n    const array = [];\n    for (let i = 0; i < size; i++) {\n      array.push(Math.floor(Math.random() * 101));\n    }\n    return array;\n  };\n\n  const quickSort = (array, start, end) => {\n    if (start >= end) {\n      return;\n    }\n\n    setPivot(array[end]);\n    const pivotIndex = partition(array, start, end);\n\n    quickSort(array, start, pivotIndex - 1);\n    quickSort(array, pivotIndex + 1, end);\n  };\n\n  const partition = (array, start, end) => {\n    const pivot = array[end];\n    let pivotIndex = start;\n\n    for (let i = start; i < end; i++) {\n      if (array[i] <= pivot) {\n        setComparing([array[i], pivot]);\n        [array[i], array[pivotIndex]] = [array[pivotIndex], array[i]];\n        pivotIndex++;\n      }\n    }\n\n    [array[pivotIndex], array[end]] = [array[end], array[pivotIndex]];\n\n    return pivotIndex;\n  };\n\n  const handleSort = () => {\n    setIsSorting(true);\n    const newArray = [...array];\n    quickSort(newArray, 0, newArray.length - 1);\n    setArray(newArray);\n    setIsSorting(false);\n  };\n\n  const handlePause = () => {\n    setIsSorting(false);\n  };\n\n  const handleResume = () => {\n    setIsSorting(true);\n    handleSort();\n  };\n\n  return (\n    <div>\n      <button onClick={handleSort}>Sort</button>\n      <button onClick={handlePause}>Pause</button>\n      <button onClick={handleResume}>Resume</button>\n      <div>\n        {array.map((num, index) => (\n          <div\n            key={index}\n            className={`number ${index === pivot ? \"pivot\" : \"\"} ${\n              isSorted(array, index) ? \"sorted\" : \"\"\n            } ${comparing.includes(num) ? \"comparing\" : \"\"}`}\n            onClick={() => setPivot(index)}\n          >\n            {num}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default QuickSortVisualizer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}