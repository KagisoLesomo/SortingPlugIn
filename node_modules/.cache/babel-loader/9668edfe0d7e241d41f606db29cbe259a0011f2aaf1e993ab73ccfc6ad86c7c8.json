{"ast":null,"code":"var _jsxFileName = \"/home/senzo/VS Code/sdp_1/src/Quicksort.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Quicksort.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quicksort() {\n  _s();\n  const [arr, setArr] = useState([]);\n  const [inputArr, setInputArr] = useState('');\n  const [isSorting, setIsSorting] = useState(false);\n  const [steps, setSteps] = useState([]);\n  const handleInputChange = e => {\n    setInputArr(e.target.value);\n  };\n  const handleGenerateRandomArray = () => {\n    const randomArr = generateRandomArray(10);\n    setArr(randomArr);\n    setSteps([]);\n  };\n  const handleSortArray = async () => {\n    setIsSorting(true);\n    const arrToSort = [...arr];\n    const sortingSteps = [];\n    await quicksort(arrToSort, 0, arrToSort.length - 1, sortingSteps);\n    setSteps(sortingSteps);\n    setIsSorting(false);\n  };\n  const generateRandomArray = length => {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n      arr.push(Math.floor(Math.random() * 100));\n    }\n    return arr;\n  };\n  const quicksort = async (arr, start, end, steps) => {\n    if (start >= end) {\n      return;\n    }\n    const pivotIndex = await partition(arr, start, end, steps);\n    await Promise.all([quicksort(arr, start, pivotIndex - 1, steps), quicksort(arr, pivotIndex + 1, end, steps)]);\n  };\n  const partition = async (arr, start, end, steps) => {\n    let pivotIndex = end; // Initial pivot index\n    let i = start - 1;\n\n    // Highlight the initial pivot before sorting\n    steps.push([pivotIndex, pivotIndex, true]);\n    setArr([...arr]);\n    const pivotValue = arr[end]; // Initial pivot value\n\n    for (let j = start; j < end; j++) {\n      if (arr[j] < pivotValue) {\n        i++;\n        await swap(arr, i, j, steps);\n      }\n    }\n\n    // Move the initial pivot to its final sorted position\n    await swap(arr, i + 1, pivotIndex, steps, true, pivotValue);\n    return i + 1;\n  };\n  const swap = async (arr, i, j, steps, isPivot = false, pivotValue) => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n\n        // Highlight the current pivot during sorting\n        steps.push([i, j, isPivot, arr[j], pivotValue]);\n        setArr([...arr]);\n        resolve();\n      }, 400); // Adjust the delay as needed\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quicksort-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter array (e.g., 1, 2, 3)\",\n        value: inputArr,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setArr(inputArr.split(',').map(Number)),\n        children: \"Use Input Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateRandomArray,\n        children: \"Generate Random Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortArray,\n        disabled: isSorting,\n        children: \"Sort Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: arr.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `circle ${steps.some(([i, j, isPivot]) => (i === index || j === index) && !isPivot) ? 'highlight' : ''} ${steps.some(([i, j, isPivot]) => (i === index || j === index) && isPivot) ? 'pivot-highlight' : ''}`,\n        children: num\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Quicksort, \"X+OKsB/S31I4Vp/c8CStyrcft74=\");\n_c = Quicksort;\nexport default Quicksort;\nvar _c;\n$RefreshReg$(_c, \"Quicksort\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quicksort","_s","arr","setArr","inputArr","setInputArr","isSorting","setIsSorting","steps","setSteps","handleInputChange","e","target","value","handleGenerateRandomArray","randomArr","generateRandomArray","handleSortArray","arrToSort","sortingSteps","quicksort","length","i","push","Math","floor","random","start","end","pivotIndex","partition","Promise","all","pivotValue","j","swap","isPivot","resolve","setTimeout","temp","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","split","map","Number","disabled","num","index","some","_c","$RefreshReg$"],"sources":["/home/senzo/VS Code/sdp_1/src/Quicksort.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Quicksort.css';\n\nfunction Quicksort() {\n  const [arr, setArr] = useState([]);\n  const [inputArr, setInputArr] = useState('');\n  const [isSorting, setIsSorting] = useState(false);\n  const [steps, setSteps] = useState([]);\n\n  const handleInputChange = (e) => {\n    setInputArr(e.target.value);\n  };\n\n  const handleGenerateRandomArray = () => {\n    const randomArr = generateRandomArray(10);\n    setArr(randomArr);\n    setSteps([]);\n  };\n\n  const handleSortArray = async () => {\n    setIsSorting(true);\n    const arrToSort = [...arr];\n    const sortingSteps = [];\n    await quicksort(arrToSort, 0, arrToSort.length - 1, sortingSteps);\n    setSteps(sortingSteps);\n    setIsSorting(false);\n  };\n\n  const generateRandomArray = (length) => {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n      arr.push(Math.floor(Math.random() * 100));\n    }\n    return arr;\n  };\n\n  const quicksort = async (arr, start, end, steps) => {\n    if (start >= end) {\n      return;\n    }\n\n    const pivotIndex = await partition(arr, start, end, steps);\n\n    await Promise.all([\n      quicksort(arr, start, pivotIndex - 1, steps),\n      quicksort(arr, pivotIndex + 1, end, steps),\n    ]);\n  };\n\n  const partition = async (arr, start, end, steps) => {\n    let pivotIndex = end; // Initial pivot index\n    let i = start - 1;\n\n    // Highlight the initial pivot before sorting\n    steps.push([pivotIndex, pivotIndex, true]);\n    setArr([...arr]);\n\n    const pivotValue = arr[end]; // Initial pivot value\n\n    for (let j = start; j < end; j++) {\n      if (arr[j] < pivotValue) {\n        i++;\n        await swap(arr, i, j, steps);\n      }\n    }\n\n    // Move the initial pivot to its final sorted position\n    await swap(arr, i + 1, pivotIndex, steps, true, pivotValue);\n\n    return i + 1;\n  };\n\n  const swap = async (arr, i, j, steps, isPivot = false, pivotValue) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n\n        // Highlight the current pivot during sorting\n        steps.push([i, j, isPivot, arr[j], pivotValue]);\n        setArr([...arr]);\n        resolve();\n      }, 400); // Adjust the delay as needed\n    });\n  };\n\n  return (\n    <div className=\"quicksort-container\">\n      <div className=\"options\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter array (e.g., 1, 2, 3)\"\n          value={inputArr}\n          onChange={handleInputChange}\n        />\n        <button onClick={() => setArr(inputArr.split(',').map(Number))}>\n          Use Input Array\n        </button>\n        <button onClick={handleGenerateRandomArray}>Generate Random Array</button>\n        <button onClick={handleSortArray} disabled={isSorting}>\n          Sort Array\n        </button>\n      </div>\n      <div className=\"array-container\">\n        {arr.map((num, index) => (\n          <div\n            key={index}\n            className={`circle ${\n              steps.some(([i, j, isPivot]) => (i === index || j === index) && !isPivot)\n                ? 'highlight'\n                : ''\n            } ${\n              steps.some(([i, j, isPivot]) => (i === index || j === index) && isPivot)\n                ? 'pivot-highlight'\n                : ''\n            }`}\n          >\n            {num}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Quicksort;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}