{"ast":null,"code":"var _jsxFileName = \"/home/senzo/VS Code/sdp_1/src/Quicksort.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [array, setArray] = useState([]);\n  const [randomArray, setRandomArray] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n\n  // Quick sort function\n  const quickSort = (arr, start, stop) => {\n    const steps = [];\n    if (start < stop) {\n      const pivotIndex = partition(arr, start, stop);\n      steps.push({\n        arr: [...arr],\n        pivotIndex\n      });\n      steps.push(...quickSort(arr, start, pivotIndex - 1));\n      steps.push(...quickSort(arr, pivotIndex + 1, stop));\n    }\n    return steps;\n  };\n\n  // Partition function\n  const partition = (arr, start, stop) => {\n    const pivot = start;\n    let i = start + 1;\n    for (let j = start + 1; j <= stop; j++) {\n      if (arr[j] <= arr[pivot]) {\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n        i++;\n      }\n    }\n    [arr[pivot], arr[i - 1]] = [arr[i - 1], arr[pivot]];\n    return i - 1;\n  };\n\n  // Handle input field changes\n  const handleInputChange = (index, event) => {\n    let data = [...array];\n    data[index] = event.target.value;\n    setArray(data);\n  };\n\n  // Handle button click event\n  const handleButtonClick = () => {\n    let newArray = Array.from({\n      length: 15\n    }, () => Math.floor(Math.random() * 100));\n    setRandomArray(newArray);\n    quickSort(newArray, 0, newArray.length - 1);\n  };\n\n  // Render input fields and button\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [array.map((value, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value,\n      onChange: event => handleInputChange(index, event)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Generate Random Array\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Sorted Array: \", randomArray.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 4\n  }, this);\n}\n_s(App, \"mQz2n6hnimPRo6m5WmFOJGEPqc4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","array","setArray","randomArray","setRandomArray","currentStep","setCurrentStep","quickSort","arr","start","stop","steps","pivotIndex","partition","push","pivot","i","j","handleInputChange","index","event","data","target","value","handleButtonClick","newArray","Array","from","length","Math","floor","random","children","map","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","join","_c","$RefreshReg$"],"sources":["/home/senzo/VS Code/sdp_1/src/Quicksort.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n const [array, setArray] = useState([]);\n const [randomArray, setRandomArray] = useState([]);\n const [currentStep, setCurrentStep] = useState(0);\n\n\n// Quick sort function\nconst quickSort = (arr, start, stop) => {\n    const steps = [];\n    if(start < stop) {\n      const pivotIndex = partition(arr, start, stop);\n      steps.push({arr: [...arr], pivotIndex});\n      steps.push(...quickSort(arr, start, pivotIndex-1));\n      steps.push(...quickSort(arr, pivotIndex + 1, stop));\n    }\n    return steps;\n   }\n   \n\n // Partition function\n const partition = (arr, start, stop) => {\n   const pivot = start;\n   let i = start + 1;\n   for(let j = start + 1; j <= stop; j++) {\n     if(arr[j] <= arr[pivot]) {\n       [arr[i], arr[j]] = [arr[j], arr[i]];\n       i++;\n     }\n   }\n   [arr[pivot], arr[i - 1]] = [arr[i - 1], arr[pivot]];\n   return i - 1;\n }\n\n // Handle input field changes\n const handleInputChange = (index, event) => {\n   let data = [...array];\n   data[index] = event.target.value;\n   setArray(data);\n }\n\n // Handle button click event\n const handleButtonClick = () => {\n   let newArray = Array.from({length: 15}, () => Math.floor(Math.random() * 100));\n   setRandomArray(newArray);\n   quickSort(newArray, 0, newArray.length - 1);\n }\n\n // Render input fields and button\n return (\n   <div>\n     {array.map((value, index) => (\n       <input\n         key={index}\n         value={value}\n         onChange={(event) => handleInputChange(index, event)}\n       />\n     ))}\n     <button onClick={handleButtonClick}>Generate Random Array</button>\n     <div>Sorted Array: {randomArray.join(', ')}</div>\n   </div>\n );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}