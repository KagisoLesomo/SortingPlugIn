{"ast":null,"code":"var _jsxFileName = \"/home/senzo/VS Code/sdp_1/src/Quicksort.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Quicksort.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quicksort() {\n  _s();\n  const [arr, setArr] = useState([]);\n  useEffect(() => {\n    // Generate the array with random numbers\n    const randomArr = generateRandomArray(10);\n    setArr(randomArr);\n\n    // Sort the array using quicksort\n    quicksort(randomArr, 0, randomArr.length - 1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quicksort-container\",\n    children: arr.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `circle ${num === arr[arr.length - 1] ? \"pivot\" : \"\"}`,\n      children: num\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Quicksort, \"+wnFstBQ/alVUnHjAeilY8YMxPY=\");\n_c = Quicksort;\nfunction generateRandomArray(length) {\n  const arr = [];\n  for (let i = 0; i < length; i++) {\n    arr.push(Math.floor(Math.random() * 100));\n  }\n  return arr;\n}\nexport default Quicksort;\nfunction quicksort(arr, start, end) {\n  if (start >= end) {\n    return;\n  }\n  const pivotIndex = partition(arr, start, end);\n  quicksort(arr, start, pivotIndex - 1);\n  quicksort(arr, pivotIndex + 1, end);\n}\nfunction partition(arr, start, end) {\n  const pivot = arr[end];\n  let i = start - 1;\n  for (let j = start; j < end; j++) {\n    if (arr[j] < pivot) {\n      i++;\n      swap(arr, i, j);\n    }\n  }\n  swap(arr, i + 1, end);\n  return i + 1;\n}\nfunction swap(arr, i, j) {\n  const temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n}\nvar _c;\n$RefreshReg$(_c, \"Quicksort\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Quicksort","_s","arr","setArr","randomArr","generateRandomArray","quicksort","length","className","children","map","num","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","i","push","Math","floor","random","start","end","pivotIndex","partition","pivot","j","swap","temp","$RefreshReg$"],"sources":["/home/senzo/VS Code/sdp_1/src/Quicksort.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Quicksort.css\";\n\nfunction Quicksort() {\n  const [arr, setArr] = useState([]);\n\n  useEffect(() => {\n    // Generate the array with random numbers\n    const randomArr = generateRandomArray(10);\n    setArr(randomArr);\n\n    // Sort the array using quicksort\n    quicksort(randomArr, 0, randomArr.length - 1);\n  }, []);\n\n  return (\n    <div className=\"quicksort-container\">\n      {arr.map((num, index) => (\n        <div\n          key={index}\n          className={`circle ${num === arr[arr.length - 1] ? \"pivot\" : \"\"}`}\n        >\n          {num}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction generateRandomArray(length) {\n  const arr = [];\n  for (let i = 0; i < length; i++) {\n    arr.push(Math.floor(Math.random() * 100));\n  }\n  return arr;\n}\n\nexport default Quicksort;\n\nfunction quicksort(arr, start, end) {\n  if (start >= end) {\n    return;\n  }\n\n  const pivotIndex = partition(arr, start, end);\n\n  quicksort(arr, start, pivotIndex - 1);\n  quicksort(arr, pivotIndex + 1, end);\n}\n\nfunction partition(arr, start, end) {\n  const pivot = arr[end];\n  let i = start - 1;\n\n  for (let j = start; j < end; j++) {\n    if (arr[j] < pivot) {\n      i++;\n      swap(arr, i, j);\n    }\n  }\n\n  swap(arr, i + 1, end);\n\n  return i + 1;\n}\n\nfunction swap(arr, i, j) {\n  const temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}