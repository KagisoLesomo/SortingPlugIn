{"ast":null,"code":"var _jsxFileName = \"/home/senzo/VS Code/sdp_1/src/Quicksort.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Quicksort.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quicksort() {\n  _s();\n  const [arr, setArr] = useState([]);\n  const [inputArr, setInputArr] = useState('');\n  const [isSorting, setIsSorting] = useState(false);\n  const [steps, setSteps] = useState([]);\n  const [initialPivotIndex, setInitialPivotIndex] = useState(null);\n  const handleInputChange = e => {\n    setInputArr(e.target.value);\n  };\n  const handleGenerateRandomArray = () => {\n    const randomArr = generateRandomArray(10);\n    setArr(randomArr);\n    setSteps([]);\n    setInitialPivotIndex(null);\n  };\n  const handleSortArray = async () => {\n    setIsSorting(true);\n    const arrToSort = [...arr];\n    const sortingSteps = [];\n\n    // Select and highlight the initial pivot\n    const pivotIndex = arrToSort.length - 1;\n    sortingSteps.push([pivotIndex, pivotIndex, true]);\n    setInitialPivotIndex(pivotIndex);\n    setSteps([...sortingSteps]);\n    await quicksort(arrToSort, 0, arrToSort.length - 1, sortingSteps);\n    setIsSorting(false);\n  };\n  const generateRandomArray = length => {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n      arr.push(Math.floor(Math.random() * 100));\n    }\n    return arr;\n  };\n  const quicksort = async (arr, start, end, steps) => {\n    if (start >= end) {\n      return;\n    }\n    const pivotIndex = await partition(arr, start, end, steps);\n    await Promise.all([quicksort(arr, start, pivotIndex - 1, steps), quicksort(arr, pivotIndex + 1, end, steps)]);\n  };\n  const partition = async (arr, start, end, steps) => {\n    const pivot = arr[end];\n    let i = start - 1;\n    for (let j = start; j < end; j++) {\n      if (arr[j] < pivot) {\n        i++;\n        await swap(arr, i, j, steps);\n      }\n    }\n    await swap(arr, i + 1, end, steps);\n    return i + 1;\n  };\n  const swap = async (arr, i, j, steps) => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        setArr([...arr]);\n\n        // Highlight the initially selected pivot for each iteration\n        const pivotIndex = initialPivotIndex;\n        if (pivotIndex !== null) {\n          steps.push([pivotIndex, pivotIndex, true]);\n        }\n        resolve();\n      }, 400); // Adjust the delay as needed\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quicksort-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter array (e.g., 1, 2, 3)\",\n        value: inputArr,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setArr(inputArr.split(',').map(Number)),\n        children: \"Use Input Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateRandomArray,\n        children: \"Generate Random Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortArray,\n        disabled: isSorting,\n        children: \"Sort Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: arr.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `circle ${steps.some(([i, j, isPivot]) => (i === index || j === index) && isPivot) ? 'pivot-highlight' : ''}`,\n        children: num\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(Quicksort, \"5BX5uNtxL148Ep9FvsMeJZY0+zA=\");\n_c = Quicksort;\nexport default Quicksort;\nvar _c;\n$RefreshReg$(_c, \"Quicksort\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quicksort","_s","arr","setArr","inputArr","setInputArr","isSorting","setIsSorting","steps","setSteps","initialPivotIndex","setInitialPivotIndex","handleInputChange","e","target","value","handleGenerateRandomArray","randomArr","generateRandomArray","handleSortArray","arrToSort","sortingSteps","pivotIndex","length","push","quicksort","i","Math","floor","random","start","end","partition","Promise","all","pivot","j","swap","resolve","setTimeout","temp","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","split","map","Number","disabled","num","index","some","isPivot","_c","$RefreshReg$"],"sources":["/home/senzo/VS Code/sdp_1/src/Quicksort.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Quicksort.css';\n\nfunction Quicksort() {\n  const [arr, setArr] = useState([]);\n  const [inputArr, setInputArr] = useState('');\n  const [isSorting, setIsSorting] = useState(false);\n  const [steps, setSteps] = useState([]);\n  const [initialPivotIndex, setInitialPivotIndex] = useState(null);\n\n  const handleInputChange = (e) => {\n    setInputArr(e.target.value);\n  };\n\n  const handleGenerateRandomArray = () => {\n    const randomArr = generateRandomArray(10);\n    setArr(randomArr);\n    setSteps([]);\n    setInitialPivotIndex(null);\n  };\n\n  const handleSortArray = async () => {\n    setIsSorting(true);\n    const arrToSort = [...arr];\n    const sortingSteps = [];\n\n    // Select and highlight the initial pivot\n    const pivotIndex = arrToSort.length - 1;\n    sortingSteps.push([pivotIndex, pivotIndex, true]);\n    setInitialPivotIndex(pivotIndex);\n    setSteps([...sortingSteps]);\n\n    await quicksort(arrToSort, 0, arrToSort.length - 1, sortingSteps);\n    setIsSorting(false);\n  };\n\n  const generateRandomArray = (length) => {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n      arr.push(Math.floor(Math.random() * 100));\n    }\n    return arr;\n  };\n\n  const quicksort = async (arr, start, end, steps) => {\n    if (start >= end) {\n      return;\n    }\n\n    const pivotIndex = await partition(arr, start, end, steps);\n\n    await Promise.all([\n      quicksort(arr, start, pivotIndex - 1, steps),\n      quicksort(arr, pivotIndex + 1, end, steps),\n    ]);\n  };\n\n  const partition = async (arr, start, end, steps) => {\n    const pivot = arr[end];\n    let i = start - 1;\n\n    for (let j = start; j < end; j++) {\n      if (arr[j] < pivot) {\n        i++;\n        await swap(arr, i, j, steps);\n      }\n    }\n\n    await swap(arr, i + 1, end, steps);\n\n    return i + 1;\n  };\n\n  const swap = async (arr, i, j, steps) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        setArr([...arr]);\n\n        // Highlight the initially selected pivot for each iteration\n        const pivotIndex = initialPivotIndex;\n        if (pivotIndex !== null) {\n          steps.push([pivotIndex, pivotIndex, true]);\n        }\n\n        resolve();\n      }, 400); // Adjust the delay as needed\n    });\n  };\n\n  return (\n    <div className=\"quicksort-container\">\n      <div className=\"options\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter array (e.g., 1, 2, 3)\"\n          value={inputArr}\n          onChange={handleInputChange}\n        />\n        <button onClick={() => setArr(inputArr.split(',').map(Number))}>\n          Use Input Array\n        </button>\n        <button onClick={handleGenerateRandomArray}>Generate Random Array</button>\n        <button onClick={handleSortArray} disabled={isSorting}>\n          Sort Array\n        </button>\n      </div>\n      <div className=\"array-container\">\n        {arr.map((num, index) => (\n          <div\n            key={index}\n            className={`circle ${\n              steps.some(([i, j, isPivot]) => (i === index || j === index) && isPivot)\n                ? 'pivot-highlight'\n                : ''\n            }`}\n          >\n            {num}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Quicksort;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}