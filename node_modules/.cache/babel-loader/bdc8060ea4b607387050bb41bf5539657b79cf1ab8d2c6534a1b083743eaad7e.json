{"ast":null,"code":"let moments = [];\nexport const quickSort = array => {\n  moments = [];\n  moments.push({\n    wholeArray: [...array],\n    highlighted: []\n  });\n  const n = array.length;\n  array.forEach((_, idx) => {\n    const newIdx = Math.floor(Math.random() * n);\n    [array[idx], array[newIdx]] = [array[newIdx], array[idx]];\n    moments.push({\n      wholeArray: [...array],\n      highlighted: [idx, newIdx]\n    });\n  });\n  sort(array, 0, array.length - 1);\n  moments.push({\n    wholeArray: [...array],\n    highlighted: []\n  });\n  return moments;\n};\nconst sort = (array, lo, hi) => {\n  if (hi <= lo) return;\n  const j = partition(array, lo, hi);\n  sort(array, lo, j - 1);\n  sort(array, j + 1, hi);\n};\nconst partition = (array, lo, hi) => {\n  let [i, j] = [lo, hi + 1];\n  const v = array[lo];\n  while (true) {\n    while (array[++i] < v) {\n      moments.push({\n        wholeArray: [...array],\n        highlighted: [i, j, lo]\n      });\n      if (i === hi) break;\n    }\n    while (v < array[--j]) {\n      moments.push({\n        wholeArray: [...array],\n        highlighted: [j, i, lo]\n      });\n      if (j === lo) break;\n    }\n    if (i >= j) break;\n    moments.push({\n      wholeArray: [...array],\n      highlighted: [i, j, lo]\n    });\n    [array[i], array[j]] = [array[j], array[i]];\n    moments.push({\n      wholeArray: [...array],\n      highlighted: [i, j, lo]\n    });\n  }\n  [array[lo], array[j]] = [array[j], array[lo]];\n  moments.push({\n    wholeArray: [...array],\n    highlighted: [i, j, lo]\n  });\n  return j;\n};\n\n// let arr = [1, 3, 4, 5, 2, 8, 6, 9, 4, 6];\n// quickSort(arr);\n\n// console.log(arr);","map":{"version":3,"names":["moments","quickSort","array","push","wholeArray","highlighted","n","length","forEach","_","idx","newIdx","Math","floor","random","sort","lo","hi","j","partition","i","v"],"sources":["/home/senzo/VS Code/sdp_project/src/utilities/quickSort.js"],"sourcesContent":["let moments = [];\n\nexport const quickSort = (array) => {\n\tmoments = [];\n\tmoments.push({ wholeArray: [...array], highlighted: [] });\n\tconst n = array.length;\n\tarray.forEach((_, idx) => {\n\t\tconst newIdx = Math.floor(Math.random() * n);\n\t\t[array[idx], array[newIdx]] = [array[newIdx], array[idx]];\n\t\tmoments.push({ wholeArray: [...array], highlighted: [idx, newIdx] });\n\t});\n\tsort(array, 0, array.length - 1);\n\tmoments.push({ wholeArray: [...array], highlighted: [] });\n\treturn moments;\n};\n\nconst sort = (array, lo, hi) => {\n\tif (hi <= lo) return;\n\tconst j = partition(array, lo, hi);\n\tsort(array, lo, j - 1);\n\tsort(array, j + 1, hi);\n};\n\nconst partition = (array, lo, hi) => {\n\tlet [i, j] = [lo, hi + 1];\n\n\tconst v = array[lo];\n\twhile (true) {\n\t\twhile (array[++i] < v) {\n\t\t\tmoments.push({ wholeArray: [...array], highlighted: [i, j, lo] });\n\t\t\tif (i === hi) break;\n\t\t}\n\t\twhile (v < array[--j]) {\n\t\t\tmoments.push({ wholeArray: [...array], highlighted: [j, i, lo] });\n\t\t\tif (j === lo) break;\n\t\t}\n\t\tif (i >= j) break;\n\n\t\tmoments.push({ wholeArray: [...array], highlighted: [i, j, lo] });\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t\tmoments.push({ wholeArray: [...array], highlighted: [i, j, lo] });\n\t}\n\t[array[lo], array[j]] = [array[j], array[lo]];\n\tmoments.push({ wholeArray: [...array], highlighted: [i, j, lo] });\n\treturn j;\n};\n\n// let arr = [1, 3, 4, 5, 2, 8, 6, 9, 4, 6];\n// quickSort(arr);\n\n// console.log(arr);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}