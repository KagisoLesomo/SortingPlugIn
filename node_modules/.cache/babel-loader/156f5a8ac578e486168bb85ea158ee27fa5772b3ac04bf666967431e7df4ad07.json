{"ast":null,"code":"var _jsxFileName = \"/home/senzo/VS Code/sdp_1/src/Quicksort.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuickSortVisualizer() {\n  _s();\n  const [array, setArray] = useState([]);\n  const [pivotIndex, setPivotIndex] = useState(null);\n  const [i, setI] = useState(null);\n  const [j, setJ] = useState(null);\n  const handleInput = event => {\n    event.preventDefault();\n    const input = event.target.elements.array.value;\n    if (input) {\n      setArray(input.split(',').map(Number));\n    } else {\n      setArray(generateRandomArray(15));\n    }\n  };\n  const generateRandomArray = size => {\n    let arr = [];\n    for (let i = 0; i < size; i++) {\n      arr.push(Math.floor(Math.random() * 100));\n    }\n    return arr;\n  };\n  const quickSort = (array, left = 0, right = array.length - 1) => {\n    if (left < right) {\n      const pivotIndex = partition(array, left, right);\n      setPivotIndex(pivotIndex);\n      quickSort(array, left, pivotIndex - 1);\n      quickSort(array, pivotIndex + 1, right);\n    }\n  };\n  const partition = (array, left, right) => {\n    const pivot = array[right];\n    let i = left;\n    for (let j = left; j < right; j++) {\n      if (array[j] < pivot) {\n        [array[i], array[j]] = [array[j], array[i]];\n        setI(i);\n        setJ(j);\n        i++;\n      }\n    }\n    [array[i], array[right]] = [array[right], array[i]];\n    setPivotIndex(i);\n    return i;\n  };\n  useEffect(() => {\n    quickSort([...array]);\n    setArray([...array]);\n  }, [array]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleInput,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"array\",\n        placeholder: \"Enter array elements separated by commas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: array.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `circle ${index === pivotIndex ? 'pivot' : ''} ${index === i || index === j ? 'compare' : ''}`,\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 10\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 4\n  }, this);\n}\n_s(QuickSortVisualizer, \"acQxVMoW4PrwvMEDWO/XF6PGzs4=\");\n_c = QuickSortVisualizer;\nexport default QuickSortVisualizer;\nvar _c;\n$RefreshReg$(_c, \"QuickSortVisualizer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","QuickSortVisualizer","_s","array","setArray","pivotIndex","setPivotIndex","i","setI","j","setJ","handleInput","event","preventDefault","input","target","elements","value","split","map","Number","generateRandomArray","size","arr","push","Math","floor","random","quickSort","left","right","length","partition","pivot","children","onSubmit","type","name","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","index","className","_c","$RefreshReg$"],"sources":["/home/senzo/VS Code/sdp_1/src/Quicksort.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction QuickSortVisualizer() {\n const [array, setArray] = useState([]);\n const [pivotIndex, setPivotIndex] = useState(null);\n const [i, setI] = useState(null);\n const [j, setJ] = useState(null);\n\n const handleInput = (event) => {\n   event.preventDefault();\n   const input = event.target.elements.array.value;\n   if (input) {\n     setArray(input.split(',').map(Number));\n   } else {\n     setArray(generateRandomArray(15));\n   }\n };\n\n const generateRandomArray = (size) => {\n   let arr = [];\n   for (let i = 0; i < size; i++) {\n     arr.push(Math.floor(Math.random() * 100));\n   }\n   return arr;\n };\n\n const quickSort = (array, left = 0, right = array.length - 1) => {\n   if (left < right) {\n     const pivotIndex = partition(array, left, right);\n     setPivotIndex(pivotIndex);\n     quickSort(array, left, pivotIndex - 1);\n     quickSort(array, pivotIndex + 1, right);\n   }\n };\n\n const partition = (array, left, right) => {\n   const pivot = array[right];\n   let i = left;\n   for (let j = left; j < right; j++) {\n     if (array[j] < pivot) {\n       [array[i], array[j]] = [array[j], array[i]];\n       setI(i);\n       setJ(j);\n       i++;\n     }\n   }\n   [array[i], array[right]] = [array[right], array[i]];\n   setPivotIndex(i);\n   return i;\n };\n\n useEffect(() => {\n   quickSort([...array]);\n   setArray([...array]);\n }, [array]);\n\n return (\n   <div>\n     <form onSubmit={handleInput}>\n       <input type=\"text\" name=\"array\" placeholder=\"Enter array elements separated by commas\" />\n       <button type=\"submit\">Sort</button>\n     </form>\n     <div>\n       {array.map((value, index) => (\n         <div className={`circle ${index === pivotIndex ? 'pivot' : ''} ${index === i || index === j ? 'compare' : ''}`}>\n           {value}\n         </div>\n       ))}\n     </div>\n   </div>\n );\n}\n\nexport default QuickSortVisualizer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}