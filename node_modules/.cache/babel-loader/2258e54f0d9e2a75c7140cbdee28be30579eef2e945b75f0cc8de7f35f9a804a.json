{"ast":null,"code":"var _jsxFileName = \"/home/senzo/VS Code/sdp_1/src/Quicksort.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Quicksort.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quicksort() {\n  _s();\n  const [arr, setArr] = useState([]);\n  const [inputArr, setInputArr] = useState('');\n  const [isSorting, setIsSorting] = useState(false);\n  const [steps, setSteps] = useState([]);\n  const [pivotPosition, setPivotPosition] = useState(null);\n  const handleInputChange = e => {\n    setInputArr(e.target.value);\n  };\n  const handleGenerateRandomArray = () => {\n    const randomArr = generateRandomArray(10);\n    setArr(randomArr);\n    setSteps([]);\n    setPivotPosition(null);\n  };\n  const handleSortArray = async () => {\n    setIsSorting(true);\n    const arrToSort = [...arr];\n    const sortingSteps = [];\n\n    // Select the initial pivot\n    const pivotIndex = arrToSort.length - 1;\n    const pivotValue = arrToSort[pivotIndex];\n    setPivotPosition(pivotValue);\n    sortingSteps.push([arrToSort.map((_, index) => arrToSort[index]), pivotIndex, pivotValue, true]);\n    setSteps([...sortingSteps]);\n    await quicksort(arrToSort, 0, arrToSort.length - 1, sortingSteps);\n    setIsSorting(false);\n  };\n  const generateRandomArray = length => {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n      arr.push(Math.floor(Math.random() * 100));\n    }\n    return arr;\n  };\n  const quicksort = async (arr, start, end, steps) => {\n    if (start >= end) {\n      return;\n    }\n    const pivotIndex = await partition(arr, start, end, steps);\n    await Promise.all([quicksort(arr, start, pivotIndex - 1, steps), quicksort(arr, pivotIndex + 1, end, steps)]);\n  };\n  const partition = async (arr, start, end, steps) => {\n    const pivot = arr[end];\n    let i = start - 1;\n    for (let j = start; j < end; j++) {\n      if (arr[j] < pivot) {\n        i++;\n        await swap(arr, i, j, steps, arr);\n      }\n    }\n    await swap(arr, i + 1, end, steps, arr);\n    return i + 1;\n  };\n  const swap = async (arr, i, j, steps, arrToSort) => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        setArr([...arr]);\n\n        // Highlight the pivot value for each iteration\n        const pivotIndex = arr.indexOf(arrToSort[pivotPosition]);\n        if (pivotIndex !== -1) {\n          steps.push([arrToSort.map((_, index) => arrToSort[index]), pivotIndex, pivotPosition, true]);\n        }\n        resolve();\n      }, 300); // Adjust the delay as needed\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quicksort-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter array (e.g., 1, 2, 3)\",\n        value: inputArr,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setArr(inputArr.split(',').map(Number)),\n        children: \"Use Input Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateRandomArray,\n        children: \"Generate Random Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortArray,\n        disabled: isSorting,\n        children: \"Sort Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: [steps.map((step, stepIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: step.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `index-circle ${num[2] ? 'pivot-highlight' : ''}`,\n          children: num[0]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this))\n      }, stepIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: arr.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `circle ${steps.some(([_, j, isPivot]) => j === index && isPivot) ? 'pivot-highlight' : ''}`,\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(Quicksort, \"UTwjljv70dH5B4F8Szh+VBq7kUM=\");\n_c = Quicksort;\nexport default Quicksort;\nvar _c;\n$RefreshReg$(_c, \"Quicksort\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quicksort","_s","arr","setArr","inputArr","setInputArr","isSorting","setIsSorting","steps","setSteps","pivotPosition","setPivotPosition","handleInputChange","e","target","value","handleGenerateRandomArray","randomArr","generateRandomArray","handleSortArray","arrToSort","sortingSteps","pivotIndex","length","pivotValue","push","map","_","index","quicksort","i","Math","floor","random","start","end","partition","Promise","all","pivot","j","swap","resolve","setTimeout","temp","indexOf","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","split","Number","disabled","step","stepIndex","num","some","isPivot","_c","$RefreshReg$"],"sources":["/home/senzo/VS Code/sdp_1/src/Quicksort.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Quicksort.css';\n\nfunction Quicksort() {\n  const [arr, setArr] = useState([]);\n  const [inputArr, setInputArr] = useState('');\n  const [isSorting, setIsSorting] = useState(false);\n  const [steps, setSteps] = useState([]);\n  const [pivotPosition, setPivotPosition] = useState(null);\n\n  const handleInputChange = (e) => {\n    setInputArr(e.target.value);\n  };\n\n  const handleGenerateRandomArray = () => {\n    const randomArr = generateRandomArray(10);\n    setArr(randomArr);\n    setSteps([]);\n    setPivotPosition(null);\n  };\n\n  const handleSortArray = async () => {\n    setIsSorting(true);\n    const arrToSort = [...arr];\n    const sortingSteps = [];\n\n    // Select the initial pivot\n    const pivotIndex = arrToSort.length - 1;\n    const pivotValue = arrToSort[pivotIndex];\n    setPivotPosition(pivotValue);\n\n    sortingSteps.push([arrToSort.map((_, index) => arrToSort[index]), pivotIndex, pivotValue, true]);\n    setSteps([...sortingSteps]);\n\n    await quicksort(arrToSort, 0, arrToSort.length - 1, sortingSteps);\n    setIsSorting(false);\n  };\n\n  const generateRandomArray = (length) => {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n      arr.push(Math.floor(Math.random() * 100));\n    }\n    return arr;\n  };\n\n  const quicksort = async (arr, start, end, steps) => {\n    if (start >= end) {\n      return;\n    }\n\n    const pivotIndex = await partition(arr, start, end, steps);\n\n    await Promise.all([\n      quicksort(arr, start, pivotIndex - 1, steps),\n      quicksort(arr, pivotIndex + 1, end, steps),\n    ]);\n  };\n\n  const partition = async (arr, start, end, steps) => {\n    const pivot = arr[end];\n    let i = start - 1;\n\n    for (let j = start; j < end; j++) {\n      if (arr[j] < pivot) {\n        i++;\n        await swap(arr, i, j, steps, arr);\n      }\n    }\n\n    await swap(arr, i + 1, end, steps, arr);\n\n    return i + 1;\n  };\n\n  const swap = async (arr, i, j, steps, arrToSort) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        setArr([...arr]);\n\n        // Highlight the pivot value for each iteration\n        const pivotIndex = arr.indexOf(arrToSort[pivotPosition]);\n        if (pivotIndex !== -1) {\n          steps.push([arrToSort.map((_, index) => arrToSort[index]), pivotIndex, pivotPosition, true]);\n        }\n\n        resolve();\n      }, 300); // Adjust the delay as needed\n    });\n  };\n\n  return (\n    <div className=\"quicksort-container\">\n      <div className=\"options\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter array (e.g., 1, 2, 3)\"\n          value={inputArr}\n          onChange={handleInputChange}\n        />\n        <button onClick={() => setArr(inputArr.split(',').map(Number))}>\n          Use Input Array\n        </button>\n        <button onClick={handleGenerateRandomArray}>Generate Random Array</button>\n        <button onClick={handleSortArray} disabled={isSorting}>\n          Sort Array\n        </button>\n      </div>\n      <div className=\"array-container\">\n        {steps.map((step, stepIndex) => (\n          <div key={stepIndex} className=\"step\">\n            {step.map((num, index) => (\n              <div key={index} className={`index-circle ${num[2] ? 'pivot-highlight' : ''}`}>\n                {num[0]}\n              </div>\n            ))}\n          </div>\n        ))}\n        <div className=\"step\">\n          {arr.map((num, index) => (\n            <div\n              key={index}\n              className={`circle ${steps.some(([_, j, isPivot]) => j === index && isPivot) ? 'pivot-highlight' : ''}`}\n            >\n              {num}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Quicksort;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}