{"ast":null,"code":"var _jsxFileName = \"/home/senzo/VS Code/sdp_1/src/Quicksort.js\",\n  _s = $RefreshSig$();\n// Quicksort.js\nimport React, { useState } from \"react\";\nimport \"./Quicksort.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quicksort = () => {\n  _s();\n  const [arr, setArr] = useState([]);\n  const [inputArr, setInputArr] = useState(\"\");\n  const [isSorting, setIsSorting] = useState(false);\n  const [steps, setSteps] = useState([]);\n  const [pivotPosition, setPivotPosition] = useState(null);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [userInput, setUserInput] = useState(\"\");\n  const handleInputChange = e => {\n    setInputArr(e.target.value);\n  };\n  const handleGenerateRandomArray = () => {\n    const randomArr = generateRandomArray(15);\n    setArr(randomArr);\n    setSteps([]);\n    setPivotPosition(null);\n  };\n  const handleSortArray = async () => {\n    setIsSorting(true);\n    const arrToSort = [...arr];\n    const sortingSteps = [];\n\n    // Select the initial pivot\n    const pivotIndex = arrToSort.length - 1;\n    setPivotPosition(pivotIndex);\n    sortingSteps.push([arrToSort.map((_, index) => arrToSort[index]), pivotIndex, arrToSort[pivotIndex]]);\n    setSteps([...sortingSteps]);\n    let swaps = 0;\n    while (currentStep < steps.length) {\n      await quicksort(arrToSort, 0, arrToSort.length - 1, sortingSteps);\n      swaps++;\n\n      // Prompt user every three swaps\n      if (swaps % 3 === 0) {\n        const userResponse = prompt(\"Enter the next state of the array (comma-separated values):\");\n        const expectedState = steps[currentStep][0].map(({\n          value\n        }) => value).join(',');\n        if (userResponse === expectedState) {\n          alert(\"Correct! The algorithm will continue sorting.\");\n        } else {\n          alert(\"Incorrect! Please enter the correct state to continue.\");\n          setIsSorting(false);\n          return;\n        }\n      }\n    }\n    setIsSorting(false);\n  };\n  const generateRandomArray = length => {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n      arr.push(Math.floor(Math.random() * 100));\n    }\n    return arr;\n  };\n  const quicksort = async (arr, start, end, steps) => {\n    if (start >= end) {\n      return;\n    }\n    const pivotIndex = await partition(arr, start, end, steps);\n\n    // Pause after every three steps\n    if (currentStep % 3 === 0) {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n    }\n    setCurrentStep(currentStep + 1);\n    return pivotIndex;\n  };\n  const partition = async (arr, start, end, steps) => {\n    const pivot = arr[end];\n    let i = start - 1;\n    for (let j = start; j < end; j++) {\n      if (arr[j] < pivot) {\n        i++;\n        await swap(arr, i, j, steps);\n      }\n    }\n    await swap(arr, i + 1, end, steps);\n    setPivotPosition(i + 1);\n    return i + 1;\n  };\n  const swap = async (arr, i, j, steps) => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        setArr([...arr]);\n\n        // Highlight the numbers being compared\n        steps.push([arr.map((_, index) => ({\n          value: arr[index],\n          isComparing: index === i || index === j\n        })), pivotPosition]);\n        setSteps([...steps]);\n        resolve();\n      }, 450);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quicksort-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter array (e.g., 1, 2, 3)\",\n        value: inputArr,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setArr(inputArr.split(\",\").map(Number)),\n        children: \"Use Input Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateRandomArray,\n        children: \"Generate Random Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortArray,\n        disabled: isSorting,\n        children: \"Sort Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: arr.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `circle ${steps.some(([_, pivot]) => pivot === pivotPosition && index !== pivot) ? \"yellow\" : \"\"}`,\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(Quicksort, \"h6deLpHhL4M18hOEF7HGrObQN8c=\");\n_c = Quicksort;\nexport default Quicksort;\nvar _c;\n$RefreshReg$(_c, \"Quicksort\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quicksort","_s","arr","setArr","inputArr","setInputArr","isSorting","setIsSorting","steps","setSteps","pivotPosition","setPivotPosition","currentStep","setCurrentStep","userInput","setUserInput","handleInputChange","e","target","value","handleGenerateRandomArray","randomArr","generateRandomArray","handleSortArray","arrToSort","sortingSteps","pivotIndex","length","push","map","_","index","swaps","quicksort","userResponse","prompt","expectedState","join","alert","i","Math","floor","random","start","end","partition","Promise","resolve","setTimeout","pivot","j","swap","temp","isComparing","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","split","Number","disabled","num","some","_c","$RefreshReg$"],"sources":["/home/senzo/VS Code/sdp_1/src/Quicksort.js"],"sourcesContent":["// Quicksort.js\nimport React, { useState } from \"react\";\nimport \"./Quicksort.css\";\n\nconst Quicksort = () => {\n  const [arr, setArr] = useState([]);\n  const [inputArr, setInputArr] = useState(\"\");\n  const [isSorting, setIsSorting] = useState(false);\n  const [steps, setSteps] = useState([]);\n  const [pivotPosition, setPivotPosition] = useState(null);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [userInput, setUserInput] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputArr(e.target.value);\n  };\n\n  const handleGenerateRandomArray = () => {\n    const randomArr = generateRandomArray(15);\n    setArr(randomArr);\n    setSteps([]);\n    setPivotPosition(null);\n  };\n\n  const handleSortArray = async () => {\n    setIsSorting(true);\n    const arrToSort = [...arr];\n    const sortingSteps = [];\n\n    // Select the initial pivot\n    const pivotIndex = arrToSort.length - 1;\n    setPivotPosition(pivotIndex);\n    sortingSteps.push([\n      arrToSort.map((_, index) => arrToSort[index]),\n      pivotIndex,\n      arrToSort[pivotIndex],\n    ]);\n    setSteps([...sortingSteps]);\n\n    let swaps = 0;\n\n    while (currentStep < steps.length) {\n      await quicksort(arrToSort, 0, arrToSort.length - 1, sortingSteps);\n      swaps++;\n\n      // Prompt user every three swaps\n      if (swaps % 3 === 0) {\n        const userResponse = prompt(\"Enter the next state of the array (comma-separated values):\");\n        const expectedState = steps[currentStep][0].map(({ value }) => value).join(',');\n\n        if (userResponse === expectedState) {\n          alert(\"Correct! The algorithm will continue sorting.\");\n        } else {\n          alert(\"Incorrect! Please enter the correct state to continue.\");\n          setIsSorting(false);\n          return;\n        }\n      }\n    }\n\n    setIsSorting(false);\n  };\n\n  const generateRandomArray = (length) => {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n      arr.push(Math.floor(Math.random() * 100));\n    }\n    return arr;\n  };\n\n  const quicksort = async (arr, start, end, steps) => {\n    if (start >= end) {\n      return;\n    }\n\n    const pivotIndex = await partition(arr, start, end, steps);\n\n    // Pause after every three steps\n    if (currentStep % 3 === 0) {\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n    }\n\n    setCurrentStep(currentStep + 1);\n\n    return pivotIndex;\n  };\n\n  const partition = async (arr, start, end, steps) => {\n    const pivot = arr[end];\n    let i = start - 1;\n\n    for (let j = start; j < end; j++) {\n      if (arr[j] < pivot) {\n        i++;\n        await swap(arr, i, j, steps);\n      }\n    }\n\n    await swap(arr, i + 1, end, steps);\n    setPivotPosition(i + 1);\n\n    return i + 1;\n  };\n\n  const swap = async (arr, i, j, steps) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        setArr([...arr]);\n\n        // Highlight the numbers being compared\n        steps.push([\n          arr.map((_, index) => ({\n            value: arr[index],\n            isComparing: index === i || index === j,\n          })),\n          pivotPosition,\n        ]);\n        setSteps([...steps]);\n\n        resolve();\n      }, 450);\n    });\n  };\n\n  return (\n    <div className=\"quicksort-container\">\n      <div className=\"options\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter array (e.g., 1, 2, 3)\"\n          value={inputArr}\n          onChange={handleInputChange}\n        />\n        <button onClick={() => setArr(inputArr.split(\",\").map(Number))}>\n          Use Input Array\n        </button>\n        <button onClick={handleGenerateRandomArray}>\n          Generate Random Array\n        </button>\n        <button onClick={handleSortArray} disabled={isSorting}>\n          Sort Array\n        </button>\n      </div>\n      <div className=\"array-container\">\n        <div className=\"step\">\n          {arr.map((num, index) => (\n            <div\n              key={index}\n              className={`circle ${\n                steps.some(\n                  ([_, pivot]) => pivot === pivotPosition && index !== pivot\n                )\n                  ? \"yellow\"\n                  : \"\"\n              }`}\n            >\n              {num}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Quicksort;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}