{"ast":null,"code":"var _jsxFileName = \"/home/senzo/VS Code/sdp_project/src/components/sort/sort.component.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { createRandomArray } from \"../../utilities/utils\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SortControls from \"../sort-controls/sort-controls.component\";\nimport SortTopSettings from \"../sort-top-settings/sort-top-settings.component.jsx\";\nimport ShowBars from \"../../components/show-bars/show-bars.component\";\nimport SortTabs from \"../sort-tabs/sort-tabs.component\";\nimport SortTopButtons from \"../sort-top-buttons/sort-top-buttons.component\";\nimport ImportData from \"../import-data/import-data.component\";\nimport \"./sort.styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sort = ({\n  sortingAlgorithm,\n  sortName,\n  sortDescription\n}) => {\n  _s();\n  // Constant values\n  const [MINIMUM, MAXIMUM, NUM_ITEMS, BIG_SLIDER, DELAY_AMOUNT] = [\"min\", \"max\", \"num_items\", \"big_slider\", \"delay_amount\"];\n  const [FORWARD, BACKWARD] = [\"forward\", \"backward\"];\n\n  // state for which type of data source we are using\n  const [tabIndex, setTabIndex] = useState(0);\n  // ALSO: THIS WILL DECIDE WHICH DATA SOURCE TO GET FROM:\n  // 0 MEANS IT IS RANDOMIZED, 1 MEANS IMPORTED DATA\n\n  // state for creating the original array\n  const [numItems, setNumItems] = useState(10);\n  const [min, setMin] = useState(1);\n  const [max, setMax] = useState(100);\n\n  // inputed data from the user\n  const [userData, setUserData] = useState(\"3,1,4,1,5,9,2,6,5,3,5\");\n  const [shownData, setShownData] = useState([10, 9, 8, 7, 6, 5, 4, 3, 2, 1]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // the set of all arrays\n  const [arrayMoments, setArrayMoments] = useState([{\n    wholeArray: [1, 2, 3],\n    highlighted: []\n  }]);\n\n  // Keeps track of the current state of the displayed sort\n  const [currentIdx, setCurrentIdx] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [speed, setSpeed] = useState(1);\n  const [baseDelay, setBaseDelay] = useState(150);\n\n  //! Handlers\n\n  // handles when array size, minimum val, or max val changes\n  const handleSliderChange = sliderType => (_event, newValue) => {\n    // const value = Number(e.target.value);\n    const newVal = Number(newValue);\n    switch (sliderType) {\n      case MINIMUM:\n        if (newVal < max) {\n          setMin(newVal);\n          setCurrentIdx(0);\n          setIsPlaying(false);\n        }\n        break;\n      case MAXIMUM:\n        if (newVal > min) {\n          setMax(newVal);\n          setCurrentIdx(0);\n          setIsPlaying(false);\n        }\n        break;\n      case NUM_ITEMS:\n        setNumItems(newVal);\n        setCurrentIdx(0);\n        setIsPlaying(false);\n        break;\n      case BIG_SLIDER:\n        setIsPlaying(false);\n        setCurrentIdx(newVal);\n        break;\n      case DELAY_AMOUNT:\n        setBaseDelay(newVal);\n        break;\n      default:\n        console.log(\"not a slider type ._.\");\n    }\n  };\n\n  // handles when the user presses play/pause button\n  const handlePlayPause = () => {\n    if (!(currentIdx === arrayMoments.length - 1)) setIsPlaying(isPlaying => !isPlaying);\n  };\n  const handleBackForward = direction => () => {\n    if (!isPlaying && direction === FORWARD && !(currentIdx === arrayMoments.length - 1)) {\n      setCurrentIdx(currIdx => currIdx + 1);\n    } else if (!isPlaying && direction === BACKWARD && !(currentIdx === 0)) {\n      setCurrentIdx(currIdx => currIdx - 1);\n    }\n  };\n  const handleReset = () => {\n    setIsPlaying(false);\n    setCurrentIdx(0);\n  };\n  const handleSpeedChange = e => {\n    const newSpeed = Number(e.target.value);\n    setSpeed(newSpeed);\n  };\n  const createNewMoments = () => {\n    setCurrentIdx(0);\n    const firstArr = createRandomArray(numItems, min, max);\n    setArrayMoments([...sortingAlgorithm(firstArr)]);\n  };\n  const createData = string => {\n    const separated = string.split(\",\");\n    const separateNums = separated.map(num => num.replace(/\\D/g, \"\"));\n    const actualNums = [];\n    separateNums.forEach(num => num.length > 0 ? actualNums.push(Number(num)) : null);\n    const finalNums = [];\n    actualNums.forEach(num => Number(num) >= 0 && Number(num) <= 100 ? finalNums.push(Math.floor(Number(num))) : null);\n    return finalNums;\n  };\n  const validateHandler = () => {\n    const finalNums = createData(userData);\n    // now the array will be of numbers\n    // if the array is too short, have empty array with no highlights\n    if (finalNums.length < 5) {\n      setErrorMessage(\"Not enough numbers.\");\n      return;\n    }\n    // otherwise if array long enough, create new array moments\n    // and display the correct array\n    setErrorMessage(\"\");\n    setIsPlaying(false);\n    setArrayMoments([...sortingAlgorithm(finalNums)]);\n    setShownData(finalNums.join(\", \"));\n    setNumItems(finalNums.length);\n  };\n\n  // Use effects: make sure to create all the moments + start interval when time is right\n  useEffect(() => {\n    if (tabIndex === 0) {\n      createNewMoments();\n    }\n  }, [min, max, numItems]);\n  useEffect(() => {\n    setShownData(arrayMoments[0].wholeArray.join(\", \"));\n    setUserData(arrayMoments[0].wholeArray.join());\n  }, [arrayMoments]);\n  useEffect(() => {\n    let interval;\n    if (isPlaying && currentIdx < arrayMoments.length - 2) {\n      interval = setInterval(() => {\n        setCurrentIdx(oldVal => oldVal === arrayMoments.length - 1 ? oldVal : oldVal + 1);\n      }, baseDelay / speed);\n    }\n    return () => clearInterval(interval);\n  }, [isPlaying]);\n  useEffect(() => {\n    if (currentIdx === arrayMoments.length - 1) {\n      setIsPlaying(false);\n    }\n  }, [currentIdx]);\n\n  // this use effect adds event listener to doc for key events\n  useEffect(() => {\n    function keyEvents(event) {\n      const [left, right, space] = [37, 39, 32];\n      const code = event.which;\n      switch (code) {\n        case left:\n          handleBackForward(BACKWARD)();\n          break;\n        case right:\n          handleBackForward(FORWARD)();\n          break;\n        case space:\n          handlePlayPause();\n          break;\n        default:\n          return;\n      }\n    }\n    window.addEventListener(\"keyup\", keyEvents);\n    return () => window.removeEventListener(\"keyup\", keyEvents);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sorting-container-div\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorting-component-inner-container\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: sortName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SortTabs, {\n        tabValue: tabIndex,\n        setTabValue: setTabIndex,\n        panel1: /*#__PURE__*/_jsxDEV(SortTopSettings, {\n          numItems: numItems,\n          handleNumItemsChange: handleSliderChange(NUM_ITEMS),\n          minValue: min,\n          handleMinValueChange: handleSliderChange(MINIMUM),\n          maxValue: max,\n          handleMaxValueChange: handleSliderChange(MAXIMUM),\n          baseDelay: baseDelay,\n          handleBaseDelayChange: handleSliderChange(DELAY_AMOUNT)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 7\n        }, this),\n        panel2: /*#__PURE__*/_jsxDEV(ImportData, {\n          data: userData,\n          setData: setUserData,\n          validateHandler: validateHandler,\n          errorMessage: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 7\n        }, this),\n        endControlsData: /*#__PURE__*/_jsxDEV(SortTopButtons, {\n          handlePlayPause: handlePlayPause,\n          isPlaying: isPlaying,\n          handleReset: handleReset,\n          createNewMoments: createNewMoments,\n          shownData: shownData,\n          userInputMode: tabIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ShowBars, {\n        currentArray: arrayMoments[currentIdx].wholeArray,\n        highlightedBars: arrayMoments[currentIdx].highlighted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SortControls, {\n        handleSliderChange: handleSliderChange(BIG_SLIDER),\n        sliderValue: currentIdx,\n        max: arrayMoments.length - 1,\n        handleBackwards: handleBackForward(BACKWARD),\n        handleForwards: handleBackForward(FORWARD),\n        handlePlayPause: handlePlayPause,\n        isPlaying: isPlaying,\n        speedValue: speed,\n        handleSpeedChange: handleSpeedChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"under-sort-content\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          children: [\"There are \", arrayMoments.length, \" \\\"frames\\\" in this sort.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 6\n        }, this), sortDescription]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 3\n  }, this);\n};\n_s(Sort, \"7GO9HGYkHvnk49on60bhVftkwIA=\");\n_c = Sort;\nexport default Sort;\n\n// useEffect(() => {\n// \tconsole.log(`Array size: ${arrayMoments[0].length}, index: ${currentIdx}`);\n// }, [currentIdx]);\nvar _c;\n$RefreshReg$(_c, \"Sort\");","map":{"version":3,"names":["useEffect","useState","createRandomArray","Typography","SortControls","SortTopSettings","ShowBars","SortTabs","SortTopButtons","ImportData","jsxDEV","_jsxDEV","Sort","sortingAlgorithm","sortName","sortDescription","_s","MINIMUM","MAXIMUM","NUM_ITEMS","BIG_SLIDER","DELAY_AMOUNT","FORWARD","BACKWARD","tabIndex","setTabIndex","numItems","setNumItems","min","setMin","max","setMax","userData","setUserData","shownData","setShownData","errorMessage","setErrorMessage","arrayMoments","setArrayMoments","wholeArray","highlighted","currentIdx","setCurrentIdx","isPlaying","setIsPlaying","speed","setSpeed","baseDelay","setBaseDelay","handleSliderChange","sliderType","_event","newValue","newVal","Number","console","log","handlePlayPause","length","handleBackForward","direction","currIdx","handleReset","handleSpeedChange","e","newSpeed","target","value","createNewMoments","firstArr","createData","string","separated","split","separateNums","map","num","replace","actualNums","forEach","push","finalNums","Math","floor","validateHandler","join","interval","setInterval","oldVal","clearInterval","keyEvents","event","left","right","space","code","which","window","addEventListener","removeEventListener","className","children","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","tabValue","setTabValue","panel1","handleNumItemsChange","minValue","handleMinValueChange","maxValue","handleMaxValueChange","handleBaseDelayChange","panel2","data","setData","endControlsData","userInputMode","currentArray","highlightedBars","sliderValue","handleBackwards","handleForwards","speedValue","_c","$RefreshReg$"],"sources":["/home/senzo/VS Code/sdp_project/src/components/sort/sort.component.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { createRandomArray } from \"../../utilities/utils\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport SortControls from \"../sort-controls/sort-controls.component\";\nimport SortTopSettings from \"../sort-top-settings/sort-top-settings.component.jsx\";\n\nimport ShowBars from \"../../components/show-bars/show-bars.component\";\nimport SortTabs from \"../sort-tabs/sort-tabs.component\";\nimport SortTopButtons from \"../sort-top-buttons/sort-top-buttons.component\";\n\nimport ImportData from \"../import-data/import-data.component\";\n\nimport \"./sort.styles.css\";\n\nconst Sort = ({ sortingAlgorithm, sortName, sortDescription }) => {\n\t// Constant values\n\tconst [MINIMUM, MAXIMUM, NUM_ITEMS, BIG_SLIDER, DELAY_AMOUNT] = [\n\t\t\"min\",\n\t\t\"max\",\n\t\t\"num_items\",\n\t\t\"big_slider\",\n\t\t\"delay_amount\",\n\t];\n\tconst [FORWARD, BACKWARD] = [\"forward\", \"backward\"];\n\n\t// state for which type of data source we are using\n\tconst [tabIndex, setTabIndex] = useState(0);\n\t// ALSO: THIS WILL DECIDE WHICH DATA SOURCE TO GET FROM:\n\t// 0 MEANS IT IS RANDOMIZED, 1 MEANS IMPORTED DATA\n\n\t// state for creating the original array\n\tconst [numItems, setNumItems] = useState(10);\n\tconst [min, setMin] = useState(1);\n\tconst [max, setMax] = useState(100);\n\n\t// inputed data from the user\n\tconst [userData, setUserData] = useState(\"3,1,4,1,5,9,2,6,5,3,5\");\n\tconst [shownData, setShownData] = useState([10, 9, 8, 7, 6, 5, 4, 3, 2, 1]);\n\tconst [errorMessage, setErrorMessage] = useState(\"\");\n\n\t// the set of all arrays\n\tconst [arrayMoments, setArrayMoments] = useState([\n\t\t{ wholeArray: [1, 2, 3], highlighted: [] },\n\t]);\n\n\t// Keeps track of the current state of the displayed sort\n\tconst [currentIdx, setCurrentIdx] = useState(0);\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [speed, setSpeed] = useState(1);\n\tconst [baseDelay, setBaseDelay] = useState(150);\n\n\t//! Handlers\n\n\t// handles when array size, minimum val, or max val changes\n\tconst handleSliderChange = (sliderType) => (_event, newValue) => {\n\t\t// const value = Number(e.target.value);\n\t\tconst newVal = Number(newValue);\n\t\tswitch (sliderType) {\n\t\t\tcase MINIMUM:\n\t\t\t\tif (newVal < max) {\n\t\t\t\t\tsetMin(newVal);\n\t\t\t\t\tsetCurrentIdx(0);\n\t\t\t\t\tsetIsPlaying(false);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase MAXIMUM:\n\t\t\t\tif (newVal > min) {\n\t\t\t\t\tsetMax(newVal);\n\t\t\t\t\tsetCurrentIdx(0);\n\t\t\t\t\tsetIsPlaying(false);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase NUM_ITEMS:\n\t\t\t\tsetNumItems(newVal);\n\t\t\t\tsetCurrentIdx(0);\n\t\t\t\tsetIsPlaying(false);\n\t\t\t\tbreak;\n\t\t\tcase BIG_SLIDER:\n\t\t\t\tsetIsPlaying(false);\n\t\t\t\tsetCurrentIdx(newVal);\n\t\t\t\tbreak;\n\t\t\tcase DELAY_AMOUNT:\n\t\t\t\tsetBaseDelay(newVal);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"not a slider type ._.\");\n\t\t}\n\t};\n\n\t// handles when the user presses play/pause button\n\tconst handlePlayPause = () => {\n\t\tif (!(currentIdx === arrayMoments.length - 1))\n\t\t\tsetIsPlaying((isPlaying) => !isPlaying);\n\t};\n\n\tconst handleBackForward = (direction) => () => {\n\t\tif (\n\t\t\t!isPlaying &&\n\t\t\tdirection === FORWARD &&\n\t\t\t!(currentIdx === arrayMoments.length - 1)\n\t\t) {\n\t\t\tsetCurrentIdx((currIdx) => currIdx + 1);\n\t\t} else if (!isPlaying && direction === BACKWARD && !(currentIdx === 0)) {\n\t\t\tsetCurrentIdx((currIdx) => currIdx - 1);\n\t\t}\n\t};\n\n\tconst handleReset = () => {\n\t\tsetIsPlaying(false);\n\t\tsetCurrentIdx(0);\n\t};\n\n\tconst handleSpeedChange = (e) => {\n\t\tconst newSpeed = Number(e.target.value);\n\t\tsetSpeed(newSpeed);\n\t};\n\n\tconst createNewMoments = () => {\n\t\tsetCurrentIdx(0);\n\t\tconst firstArr = createRandomArray(numItems, min, max);\n\t\tsetArrayMoments([...sortingAlgorithm(firstArr)]);\n\t};\n\n\tconst createData = (string) => {\n\t\tconst separated = string.split(\",\");\n\t\tconst separateNums = separated.map((num) => num.replace(/\\D/g, \"\"));\n\t\tconst actualNums = [];\n\t\tseparateNums.forEach((num) =>\n\t\t\tnum.length > 0 ? actualNums.push(Number(num)) : null\n\t\t);\n\t\tconst finalNums = [];\n\t\tactualNums.forEach((num) =>\n\t\t\tNumber(num) >= 0 && Number(num) <= 100\n\t\t\t\t? finalNums.push(Math.floor(Number(num)))\n\t\t\t\t: null\n\t\t);\n\n\t\treturn finalNums;\n\t};\n\n\tconst validateHandler = () => {\n\t\tconst finalNums = createData(userData);\n\t\t// now the array will be of numbers\n\t\t// if the array is too short, have empty array with no highlights\n\t\tif (finalNums.length < 5) {\n\t\t\tsetErrorMessage(\"Not enough numbers.\");\n\t\t\treturn;\n\t\t}\n\t\t// otherwise if array long enough, create new array moments\n\t\t// and display the correct array\n\t\tsetErrorMessage(\"\");\n\t\tsetIsPlaying(false);\n\t\tsetArrayMoments([...sortingAlgorithm(finalNums)]);\n\t\tsetShownData(finalNums.join(\", \"));\n\t\tsetNumItems(finalNums.length);\n\t};\n\n\t// Use effects: make sure to create all the moments + start interval when time is right\n\tuseEffect(() => {\n\t\tif (tabIndex === 0) {\n\t\t\tcreateNewMoments();\n\t\t}\n\t}, [min, max, numItems]);\n\tuseEffect(() => {\n\t\tsetShownData(arrayMoments[0].wholeArray.join(\", \"));\n\t\tsetUserData(arrayMoments[0].wholeArray.join());\n\t}, [arrayMoments]);\n\n\tuseEffect(() => {\n\t\tlet interval;\n\n\t\tif (isPlaying && currentIdx < arrayMoments.length - 2) {\n\t\t\tinterval = setInterval(() => {\n\t\t\t\tsetCurrentIdx((oldVal) =>\n\t\t\t\t\toldVal === arrayMoments.length - 1 ? oldVal : oldVal + 1\n\t\t\t\t);\n\t\t\t}, baseDelay / speed);\n\t\t}\n\t\treturn () => clearInterval(interval);\n\t}, [isPlaying]);\n\n\tuseEffect(() => {\n\t\tif (currentIdx === arrayMoments.length - 1) {\n\t\t\tsetIsPlaying(false);\n\t\t}\n\t}, [currentIdx]);\n\n\t// this use effect adds event listener to doc for key events\n\tuseEffect(() => {\n\t\tfunction keyEvents(event) {\n\t\t\tconst [left, right, space] = [37, 39, 32];\n\t\t\tconst code = event.which;\n\t\t\tswitch (code) {\n\t\t\t\tcase left:\n\t\t\t\t\thandleBackForward(BACKWARD)();\n\t\t\t\t\tbreak;\n\t\t\t\tcase right:\n\t\t\t\t\thandleBackForward(FORWARD)();\n\t\t\t\t\tbreak;\n\t\t\t\tcase space:\n\t\t\t\t\thandlePlayPause();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\twindow.addEventListener(\"keyup\", keyEvents);\n\t\treturn () => window.removeEventListener(\"keyup\", keyEvents);\n\t});\n\n\treturn (\n\t\t<div className=\"sorting-container-div\">\n\t\t\t<div className=\"sorting-component-inner-container\">\n\t\t\t\t<Typography variant=\"h4\" component=\"h1\">\n\t\t\t\t\t{sortName}\n\t\t\t\t</Typography>\n\t\t\t\t<SortTabs\n\t\t\t\t\ttabValue={tabIndex}\n\t\t\t\t\tsetTabValue={setTabIndex}\n\t\t\t\t\tpanel1={\n\t\t\t\t\t\t<SortTopSettings\n\t\t\t\t\t\t\tnumItems={numItems}\n\t\t\t\t\t\t\thandleNumItemsChange={handleSliderChange(NUM_ITEMS)}\n\t\t\t\t\t\t\tminValue={min}\n\t\t\t\t\t\t\thandleMinValueChange={handleSliderChange(MINIMUM)}\n\t\t\t\t\t\t\tmaxValue={max}\n\t\t\t\t\t\t\thandleMaxValueChange={handleSliderChange(MAXIMUM)}\n\t\t\t\t\t\t\tbaseDelay={baseDelay}\n\t\t\t\t\t\t\thandleBaseDelayChange={handleSliderChange(DELAY_AMOUNT)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tpanel2={\n\t\t\t\t\t\t<ImportData\n\t\t\t\t\t\t\tdata={userData}\n\t\t\t\t\t\t\tsetData={setUserData}\n\t\t\t\t\t\t\tvalidateHandler={validateHandler}\n\t\t\t\t\t\t\terrorMessage={errorMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tendControlsData={\n\t\t\t\t\t\t<SortTopButtons\n\t\t\t\t\t\t\thandlePlayPause={handlePlayPause}\n\t\t\t\t\t\t\tisPlaying={isPlaying}\n\t\t\t\t\t\t\thandleReset={handleReset}\n\t\t\t\t\t\t\tcreateNewMoments={createNewMoments}\n\t\t\t\t\t\t\tshownData={shownData}\n\t\t\t\t\t\t\tuserInputMode={tabIndex}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\n\t\t\t\t<ShowBars\n\t\t\t\t\tcurrentArray={arrayMoments[currentIdx].wholeArray}\n\t\t\t\t\thighlightedBars={arrayMoments[currentIdx].highlighted}\n\t\t\t\t/>\n\n\t\t\t\t<SortControls\n\t\t\t\t\thandleSliderChange={handleSliderChange(BIG_SLIDER)}\n\t\t\t\t\tsliderValue={currentIdx}\n\t\t\t\t\tmax={arrayMoments.length - 1}\n\t\t\t\t\thandleBackwards={handleBackForward(BACKWARD)}\n\t\t\t\t\thandleForwards={handleBackForward(FORWARD)}\n\t\t\t\t\thandlePlayPause={handlePlayPause}\n\t\t\t\t\tisPlaying={isPlaying}\n\t\t\t\t\tspeedValue={speed}\n\t\t\t\t\thandleSpeedChange={handleSpeedChange}\n\t\t\t\t/>\n\t\t\t\t<div className=\"under-sort-content\">\n\t\t\t\t\t<Typography variant=\"body1\" component=\"p\">\n\t\t\t\t\t\tThere are {arrayMoments.length} \"frames\" in this sort.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{sortDescription}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Sort;\n\n// useEffect(() => {\n// \tconsole.log(`Array size: ${arrayMoments[0].length}, index: ${currentIdx}`);\n// }, [currentIdx]);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}