{"ast":null,"code":"var _jsxFileName = \"/home/senzo/VS Code/sdp_1/src/Quicksort.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Quicksort.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quicksort() {\n  _s();\n  const [arr, setArr] = useState([]);\n  const [inputArr, setInputArr] = useState('');\n  const [isSorting, setIsSorting] = useState(false);\n  const [steps, setSteps] = useState([]);\n  const [pivotPosition, setPivotPosition] = useState(null);\n  const handleInputChange = e => {\n    setInputArr(e.target.value);\n  };\n  const handleGenerateRandomArray = () => {\n    const randomArr = generateRandomArray(10);\n    setArr(randomArr);\n    setSteps([]);\n    setPivotPosition(null);\n  };\n  const handleSortArray = async () => {\n    setIsSorting(true);\n    const arrToSort = [...arr];\n    const sortingSteps = [];\n    await quicksort(arrToSort, 0, arrToSort.length - 1, sortingSteps);\n    setIsSorting(false);\n  };\n  const generateRandomArray = length => {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n      arr.push(Math.floor(Math.random() * 100));\n    }\n    return arr;\n  };\n  const quicksort = async (arr, start, end, steps) => {\n    if (start >= end) {\n      return;\n    }\n    const pivotIndex = await partition(arr, start, end, steps);\n    await Promise.all([quicksort(arr, start, pivotIndex - 1, steps), quicksort(arr, pivotIndex + 1, end, steps)]);\n  };\n  const partition = async (arr, start, end, steps) => {\n    const pivot = arr[end];\n    let i = start - 1;\n    for (let j = start; j < end; j++) {\n      if (arr[j] < pivot) {\n        i++;\n        await swap(arr, i, j, steps);\n      }\n    }\n    await swap(arr, i + 1, end, steps);\n    return i + 1;\n  };\n  const swap = async (arr, i, j, steps) => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        setArr([...arr]);\n\n        // Highlight the pivot value for each iteration\n        const pivotIndex = arr.indexOf(arr[j]);\n        if (pivotIndex !== -1) {\n          setPivotPosition(pivotIndex);\n          steps.push([pivotIndex, pivotIndex, true]);\n          setSteps([...steps]);\n        }\n        resolve();\n      }, 300); // Adjust the delay as needed\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quicksort-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter array (e.g., 1, 2, 3)\",\n          value: inputArr,\n          onChange: handleInputChange,\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setArr(inputArr.split(',').map(Number)),\n          className: \"button\",\n          children: \"Use Input Array\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateRandomArray,\n        className: \"button\",\n        children: \"Generate Random Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortArray,\n        disabled: isSorting,\n        className: \"button\",\n        children: \"Sort Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: arr.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `circle ${steps.some(([i, j, isPivot]) => (i === index || j === index) && isPivot) ? 'pivot-highlight' : ''}`,\n        children: num\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Quicksort, \"UTwjljv70dH5B4F8Szh+VBq7kUM=\");\n_c = Quicksort;\nexport default Quicksort;\nvar _c;\n$RefreshReg$(_c, \"Quicksort\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quicksort","_s","arr","setArr","inputArr","setInputArr","isSorting","setIsSorting","steps","setSteps","pivotPosition","setPivotPosition","handleInputChange","e","target","value","handleGenerateRandomArray","randomArr","generateRandomArray","handleSortArray","arrToSort","sortingSteps","quicksort","length","i","push","Math","floor","random","start","end","pivotIndex","partition","Promise","all","pivot","j","swap","resolve","setTimeout","temp","indexOf","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","split","map","Number","disabled","num","index","some","isPivot","_c","$RefreshReg$"],"sources":["/home/senzo/VS Code/sdp_1/src/Quicksort.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Quicksort.css';\n\nfunction Quicksort() {\n  const [arr, setArr] = useState([]);\n  const [inputArr, setInputArr] = useState('');\n  const [isSorting, setIsSorting] = useState(false);\n  const [steps, setSteps] = useState([]);\n  const [pivotPosition, setPivotPosition] = useState(null);\n\n  const handleInputChange = (e) => {\n    setInputArr(e.target.value);\n  };\n\n  const handleGenerateRandomArray = () => {\n    const randomArr = generateRandomArray(10);\n    setArr(randomArr);\n    setSteps([]);\n    setPivotPosition(null);\n  };\n\n  const handleSortArray = async () => {\n    setIsSorting(true);\n    const arrToSort = [...arr];\n    const sortingSteps = [];\n\n    await quicksort(arrToSort, 0, arrToSort.length - 1, sortingSteps);\n    setIsSorting(false);\n  };\n\n  const generateRandomArray = (length) => {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n      arr.push(Math.floor(Math.random() * 100));\n    }\n    return arr;\n  };\n\n  const quicksort = async (arr, start, end, steps) => {\n    if (start >= end) {\n      return;\n    }\n\n    const pivotIndex = await partition(arr, start, end, steps);\n\n    await Promise.all([\n      quicksort(arr, start, pivotIndex - 1, steps),\n      quicksort(arr, pivotIndex + 1, end, steps),\n    ]);\n  };\n\n  const partition = async (arr, start, end, steps) => {\n    const pivot = arr[end];\n    let i = start - 1;\n\n    for (let j = start; j < end; j++) {\n      if (arr[j] < pivot) {\n        i++;\n        await swap(arr, i, j, steps);\n      }\n    }\n\n    await swap(arr, i + 1, end, steps);\n\n    return i + 1;\n  };\n\n  const swap = async (arr, i, j, steps) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        setArr([...arr]);\n\n        // Highlight the pivot value for each iteration\n        const pivotIndex = arr.indexOf(arr[j]);\n        if (pivotIndex !== -1) {\n          setPivotPosition(pivotIndex);\n          steps.push([pivotIndex, pivotIndex, true]);\n          setSteps([...steps]);\n        }\n\n        resolve();\n      }, 300); // Adjust the delay as needed\n    });\n  };\n\n  return (\n    <div className=\"quicksort-container\">\n      <div className=\"options\">\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter array (e.g., 1, 2, 3)\"\n            value={inputArr}\n            onChange={handleInputChange}\n            className=\"input-field\"\n          />\n          <button\n            onClick={() => setArr(inputArr.split(',').map(Number))}\n            className=\"button\"\n          >\n            Use Input Array\n          </button>\n        </div>\n        <button\n          onClick={handleGenerateRandomArray}\n          className=\"button\"\n        >\n          Generate Random Array\n        </button>\n        <button\n          onClick={handleSortArray}\n          disabled={isSorting}\n          className=\"button\"\n        >\n          Sort Array\n        </button>\n      </div>\n      <div className=\"array-container\">\n        {arr.map((num, index) => (\n          <div\n            key={index}\n            className={`circle ${\n              steps.some(([i, j, isPivot]) => (i === index || j === index) && isPivot)\n                ? 'pivot-highlight'\n                : ''\n            }`}\n          >\n            {num}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Quicksort;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMe,iBAAiB,GAAIC,CAAC,IAAK;IAC/BR,WAAW,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;IACtC,MAAMC,SAAS,GAAGC,mBAAmB,CAAC,EAAE,CAAC;IACzCf,MAAM,CAACc,SAAS,CAAC;IACjBR,QAAQ,CAAC,EAAE,CAAC;IACZE,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCZ,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMa,SAAS,GAAG,CAAC,GAAGlB,GAAG,CAAC;IAC1B,MAAMmB,YAAY,GAAG,EAAE;IAEvB,MAAMC,SAAS,CAACF,SAAS,EAAE,CAAC,EAAEA,SAAS,CAACG,MAAM,GAAG,CAAC,EAAEF,YAAY,CAAC;IACjEd,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMW,mBAAmB,GAAIK,MAAM,IAAK;IACtC,MAAMrB,GAAG,GAAG,EAAE;IACd,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,EAAEC,CAAC,EAAE,EAAE;MAC/BtB,GAAG,CAACuB,IAAI,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAC3C;IACA,OAAO1B,GAAG;EACZ,CAAC;EAED,MAAMoB,SAAS,GAAG,MAAAA,CAAOpB,GAAG,EAAE2B,KAAK,EAAEC,GAAG,EAAEtB,KAAK,KAAK;IAClD,IAAIqB,KAAK,IAAIC,GAAG,EAAE;MAChB;IACF;IAEA,MAAMC,UAAU,GAAG,MAAMC,SAAS,CAAC9B,GAAG,EAAE2B,KAAK,EAAEC,GAAG,EAAEtB,KAAK,CAAC;IAE1D,MAAMyB,OAAO,CAACC,GAAG,CAAC,CAChBZ,SAAS,CAACpB,GAAG,EAAE2B,KAAK,EAAEE,UAAU,GAAG,CAAC,EAAEvB,KAAK,CAAC,EAC5Cc,SAAS,CAACpB,GAAG,EAAE6B,UAAU,GAAG,CAAC,EAAED,GAAG,EAAEtB,KAAK,CAAC,CAC3C,CAAC;EACJ,CAAC;EAED,MAAMwB,SAAS,GAAG,MAAAA,CAAO9B,GAAG,EAAE2B,KAAK,EAAEC,GAAG,EAAEtB,KAAK,KAAK;IAClD,MAAM2B,KAAK,GAAGjC,GAAG,CAAC4B,GAAG,CAAC;IACtB,IAAIN,CAAC,GAAGK,KAAK,GAAG,CAAC;IAEjB,KAAK,IAAIO,CAAC,GAAGP,KAAK,EAAEO,CAAC,GAAGN,GAAG,EAAEM,CAAC,EAAE,EAAE;MAChC,IAAIlC,GAAG,CAACkC,CAAC,CAAC,GAAGD,KAAK,EAAE;QAClBX,CAAC,EAAE;QACH,MAAMa,IAAI,CAACnC,GAAG,EAAEsB,CAAC,EAAEY,CAAC,EAAE5B,KAAK,CAAC;MAC9B;IACF;IAEA,MAAM6B,IAAI,CAACnC,GAAG,EAAEsB,CAAC,GAAG,CAAC,EAAEM,GAAG,EAAEtB,KAAK,CAAC;IAElC,OAAOgB,CAAC,GAAG,CAAC;EACd,CAAC;EAED,MAAMa,IAAI,GAAG,MAAAA,CAAOnC,GAAG,EAAEsB,CAAC,EAAEY,CAAC,EAAE5B,KAAK,KAAK;IACvC,OAAO,IAAIyB,OAAO,CAAEK,OAAO,IAAK;MAC9BC,UAAU,CAAC,MAAM;QACf,MAAMC,IAAI,GAAGtC,GAAG,CAACsB,CAAC,CAAC;QACnBtB,GAAG,CAACsB,CAAC,CAAC,GAAGtB,GAAG,CAACkC,CAAC,CAAC;QACflC,GAAG,CAACkC,CAAC,CAAC,GAAGI,IAAI;QACbrC,MAAM,CAAC,CAAC,GAAGD,GAAG,CAAC,CAAC;;QAEhB;QACA,MAAM6B,UAAU,GAAG7B,GAAG,CAACuC,OAAO,CAACvC,GAAG,CAACkC,CAAC,CAAC,CAAC;QACtC,IAAIL,UAAU,KAAK,CAAC,CAAC,EAAE;UACrBpB,gBAAgB,CAACoB,UAAU,CAAC;UAC5BvB,KAAK,CAACiB,IAAI,CAAC,CAACM,UAAU,EAAEA,UAAU,EAAE,IAAI,CAAC,CAAC;UAC1CtB,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAC,CAAC;QACtB;QAEA8B,OAAO,CAAC,CAAC;MACX,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC;EACJ,CAAC;;EAED,oBACEvC,OAAA;IAAK2C,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC5C,OAAA;MAAK2C,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtB5C,OAAA;QAAK2C,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B5C,OAAA;UACE6C,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,6BAA6B;UACzC9B,KAAK,EAAEX,QAAS;UAChB0C,QAAQ,EAAElC,iBAAkB;UAC5B8B,SAAS,EAAC;QAAa;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACFnD,OAAA;UACEoD,OAAO,EAAEA,CAAA,KAAMhD,MAAM,CAACC,QAAQ,CAACgD,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC,CAAE;UACvDZ,SAAS,EAAC,QAAQ;UAAAC,QAAA,EACnB;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNnD,OAAA;QACEoD,OAAO,EAAEnC,yBAA0B;QACnC0B,SAAS,EAAC,QAAQ;QAAAC,QAAA,EACnB;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnD,OAAA;QACEoD,OAAO,EAAEhC,eAAgB;QACzBoC,QAAQ,EAAEjD,SAAU;QACpBoC,SAAS,EAAC,QAAQ;QAAAC,QAAA,EACnB;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNnD,OAAA;MAAK2C,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BzC,GAAG,CAACmD,GAAG,CAAC,CAACG,GAAG,EAAEC,KAAK,kBAClB1D,OAAA;QAEE2C,SAAS,EAAG,UACVlC,KAAK,CAACkD,IAAI,CAAC,CAAC,CAAClC,CAAC,EAAEY,CAAC,EAAEuB,OAAO,CAAC,KAAK,CAACnC,CAAC,KAAKiC,KAAK,IAAIrB,CAAC,KAAKqB,KAAK,KAAKE,OAAO,CAAC,GACpE,iBAAiB,GACjB,EACL,EAAE;QAAAhB,QAAA,EAEFa;MAAG,GAPCC,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjD,EAAA,CArIQD,SAAS;AAAA4D,EAAA,GAAT5D,SAAS;AAuIlB,eAAeA,SAAS;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}