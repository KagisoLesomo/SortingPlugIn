{"ast":null,"code":"var _jsxFileName = \"/home/senzo/VS Code/sdp_1/src/Quicksort.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Quicksort.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quicksort() {\n  _s();\n  const [arr, setArr] = useState([]);\n  const [inputArr, setInputArr] = useState('');\n  const [isSorting, setIsSorting] = useState(false);\n  const [steps, setSteps] = useState([]);\n  const [pivotPosition, setPivotPosition] = useState(null);\n  const handleInputChange = e => {\n    setInputArr(e.target.value);\n  };\n  const handleGenerateRandomArray = () => {\n    const randomArr = generateRandomArray(10);\n    setArr(randomArr);\n    setSteps([]);\n    setPivotPosition(null);\n  };\n  const handleSortArray = async () => {\n    setIsSorting(true);\n    const arrToSort = [...arr];\n    const sortingSteps = [];\n\n    // Select the initial pivot\n    const pivotIndex = arrToSort.length - 1;\n    setPivotPosition(pivotIndex); // Update to set the pivot index directly\n\n    sortingSteps.push([arrToSort.map((_, index) => arrToSort[index]), pivotIndex, arrToSort[pivotIndex], true]);\n    setSteps([...sortingSteps]);\n    await quicksort(arrToSort, 0, arrToSort.length - 1, sortingSteps);\n    setIsSorting(false);\n  };\n  const highlightPivot = async (arrToSort, sortingSteps) => {\n    let pivotHighlighted = false;\n    while (!pivotHighlighted) {\n      // Find the current index of the pivot value in the original array\n      const pivotIndex = arr.indexOf(pivotPosition);\n      if (pivotIndex === -1) {\n        // Pivot not found, break the loop\n        break;\n      }\n\n      // Find the corresponding index of the pivot value in the sorted array\n      const sortedPivotIndex = arrToSort.indexOf(pivotPosition);\n\n      // Highlight the pivot value at its current index in the sorted array\n      sortingSteps.push([arrToSort.map((_, index) => arrToSort[index]), sortedPivotIndex, pivotPosition, true]);\n      setSteps([...sortingSteps]);\n      await new Promise(resolve => setTimeout(resolve, 300)); // Adjust the delay as needed\n\n      // Check if the pivot has moved to a different position\n      if (pivotIndex !== sortedPivotIndex) {\n        pivotHighlighted = false;\n      } else {\n        pivotHighlighted = true;\n      }\n    }\n  };\n  const quicksort = async (arr, start, end, steps) => {\n    if (start >= end) {\n      return;\n    }\n    const pivotIndex = await partition(arr, start, end, steps);\n    await Promise.all([quicksort(arr, start, pivotIndex - 1, steps), quicksort(arr, pivotIndex + 1, end, steps)]);\n\n    // Start highlighting the pivot value as it moves\n    await highlightPivot(arr, steps);\n  };\n  const partition = async (arr, start, end, steps) => {\n    const pivot = arr[end];\n    let i = start - 1;\n    for (let j = start; j < end; j++) {\n      if (arr[j] < pivot) {\n        i++;\n        await swap(arr, i, j, steps, arr);\n      }\n    }\n    await swap(arr, i + 1, end, steps, end);\n    return i + 1;\n  };\n  const swap = async (arr, i, j, steps, pivotIndex) => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        setArr([...arr]);\n\n        // Highlight the pivot value for each iteration\n        steps.push([arr.map((_, index) => arr[index]), pivotIndex, arr[pivotIndex], true]);\n        resolve();\n      }, 300); // Adjust the delay as needed\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quicksort-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter array (e.g., 1, 2, 3)\",\n        value: inputArr,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setArr(inputArr.split(',').map(Number)),\n        children: \"Use Input Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateRandomArray,\n        children: \"Generate Random Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortArray,\n        disabled: isSorting,\n        children: \"Sort Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: arr.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `circle ${steps.some(([_, j, isPivot]) => j === index && isPivot) ? 'pivot-highlight' : ''}`,\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(Quicksort, \"UTwjljv70dH5B4F8Szh+VBq7kUM=\");\n_c = Quicksort;\nexport default Quicksort;\nvar _c;\n$RefreshReg$(_c, \"Quicksort\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quicksort","_s","arr","setArr","inputArr","setInputArr","isSorting","setIsSorting","steps","setSteps","pivotPosition","setPivotPosition","handleInputChange","e","target","value","handleGenerateRandomArray","randomArr","generateRandomArray","handleSortArray","arrToSort","sortingSteps","pivotIndex","length","push","map","_","index","quicksort","highlightPivot","pivotHighlighted","indexOf","sortedPivotIndex","Promise","resolve","setTimeout","start","end","partition","all","pivot","i","j","swap","temp","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","split","Number","disabled","num","some","isPivot","_c","$RefreshReg$"],"sources":["/home/senzo/VS Code/sdp_1/src/Quicksort.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Quicksort.css';\n\nfunction Quicksort() {\n  const [arr, setArr] = useState([]);\n  const [inputArr, setInputArr] = useState('');\n  const [isSorting, setIsSorting] = useState(false);\n  const [steps, setSteps] = useState([]);\n  const [pivotPosition, setPivotPosition] = useState(null);\n\n  const handleInputChange = (e) => {\n    setInputArr(e.target.value);\n  };\n\n  const handleGenerateRandomArray = () => {\n    const randomArr = generateRandomArray(10);\n    setArr(randomArr);\n    setSteps([]);\n    setPivotPosition(null);\n  };\n\n  const handleSortArray = async () => {\n    setIsSorting(true);\n    const arrToSort = [...arr];\n    const sortingSteps = [];\n  \n    // Select the initial pivot\n    const pivotIndex = arrToSort.length - 1;\n    setPivotPosition(pivotIndex); // Update to set the pivot index directly\n  \n    sortingSteps.push([arrToSort.map((_, index) => arrToSort[index]), pivotIndex, arrToSort[pivotIndex], true]);\n    setSteps([...sortingSteps]);\n  \n    await quicksort(arrToSort, 0, arrToSort.length - 1, sortingSteps);\n    setIsSorting(false);\n  };\n  \n\n  const highlightPivot = async (arrToSort, sortingSteps) => {\n    let pivotHighlighted = false;\n  \n    while (!pivotHighlighted) {\n      // Find the current index of the pivot value in the original array\n      const pivotIndex = arr.indexOf(pivotPosition);\n      if (pivotIndex === -1) {\n        // Pivot not found, break the loop\n        break;\n      }\n  \n      // Find the corresponding index of the pivot value in the sorted array\n      const sortedPivotIndex = arrToSort.indexOf(pivotPosition);\n  \n      // Highlight the pivot value at its current index in the sorted array\n      sortingSteps.push([\n        arrToSort.map((_, index) => arrToSort[index]),\n        sortedPivotIndex,\n        pivotPosition,\n        true,\n      ]);\n      setSteps([...sortingSteps]);\n  \n      await new Promise((resolve) => setTimeout(resolve, 300)); // Adjust the delay as needed\n  \n      // Check if the pivot has moved to a different position\n      if (pivotIndex !== sortedPivotIndex) {\n        pivotHighlighted = false;\n      } else {\n        pivotHighlighted = true;\n      }\n    }\n  };\n  \n  \n  \n\n  const quicksort = async (arr, start, end, steps) => {\n    if (start >= end) {\n      return;\n    }\n\n    const pivotIndex = await partition(arr, start, end, steps);\n    await Promise.all([\n      quicksort(arr, start, pivotIndex - 1, steps),\n      quicksort(arr, pivotIndex + 1, end, steps),\n    ]);\n\n    // Start highlighting the pivot value as it moves\n    await highlightPivot(arr, steps);\n  };\n\n  const partition = async (arr, start, end, steps) => {\n    const pivot = arr[end];\n    let i = start - 1;\n\n    for (let j = start; j < end; j++) {\n      if (arr[j] < pivot) {\n        i++;\n        await swap(arr, i, j, steps, arr);\n      }\n    }\n\n    await swap(arr, i + 1, end, steps, end);\n\n    return i + 1;\n  };\n\n  const swap = async (arr, i, j, steps, pivotIndex) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        setArr([...arr]);\n  \n        // Highlight the pivot value for each iteration\n        steps.push([arr.map((_, index) => arr[index]), pivotIndex, arr[pivotIndex], true]);\n        \n        resolve();\n      }, 300); // Adjust the delay as needed\n    });\n  };\n  \n  \n  return (\n    <div className=\"quicksort-container\">\n      <div className=\"options\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter array (e.g., 1, 2, 3)\"\n          value={inputArr}\n          onChange={handleInputChange}\n        />\n        <button onClick={() => setArr(inputArr.split(',').map(Number))}>\n          Use Input Array\n        </button>\n        <button onClick={handleGenerateRandomArray}>Generate Random Array</button>\n        <button onClick={handleSortArray} disabled={isSorting}>\n          Sort Array\n        </button>\n      </div>\n      <div className=\"array-container\">\n        <div className=\"step\">\n          {arr.map((num, index) => (\n            <div\n              key={index}\n              className={`circle ${steps.some(([_, j, isPivot]) => j === index && isPivot) ? 'pivot-highlight' : ''}`}\n            >\n              {num}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Quicksort;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}