{"ast":null,"code":"let aux;\nlet moments = [];\nconst merge = (array, lo, mid, hi) => {\n  let [i, j] = [lo, mid + 1];\n  for (let k = lo; k <= hi; k++) {\n    aux[k] = array[k];\n  }\n  for (let k = lo; k <= hi; k++) {\n    moments.push({\n      wholeArray: [...array],\n      highlighted: [k, i, j]\n    });\n    if (i > mid) array[k] = aux[j++];else if (j > hi) array[k] = aux[i++];else if (aux[j] < aux[i]) array[k] = aux[j++];else array[k] = aux[i++];\n  }\n};\nconst sort = (array, lo, hi) => {\n  if (hi <= lo) return;\n  let mid = Math.floor(lo + (hi - lo) / 2);\n  sort(array, lo, mid); // sort the left half\n  sort(array, mid + 1, hi); // sort the right half\n  merge(array, lo, mid, hi); // merge results\n};\n\nexport const mergeSort = array => {\n  moments = [];\n  moments.push({\n    wholeArray: [...array],\n    highlighted: []\n  });\n  aux = new Array(array.length).fill(0);\n  sort(array, 0, array.length - 1);\n  moments.push({\n    wholeArray: [...array],\n    highlighted: []\n  });\n  return moments;\n};","map":{"version":3,"names":["aux","moments","merge","array","lo","mid","hi","i","j","k","push","wholeArray","highlighted","sort","Math","floor","mergeSort","Array","length","fill"],"sources":["/home/senzo/VS Code/sdp_project/src/utilities/mergeSort.js"],"sourcesContent":["let aux;\nlet moments = [];\n\nconst merge = (array, lo, mid, hi) => {\n\tlet [i, j] = [lo, mid + 1];\n\n\tfor (let k = lo; k <= hi; k++) {\n\t\taux[k] = array[k];\n\t}\n\n\tfor (let k = lo; k <= hi; k++) {\n\t\tmoments.push({ wholeArray: [...array], highlighted: [k, i, j] });\n\t\tif (i > mid) array[k] = aux[j++];\n\t\telse if (j > hi) array[k] = aux[i++];\n\t\telse if (aux[j] < aux[i]) array[k] = aux[j++];\n\t\telse array[k] = aux[i++];\n\t}\n};\nconst sort = (array, lo, hi) => {\n\tif (hi <= lo) return;\n\tlet mid = Math.floor(lo + (hi - lo) / 2);\n\tsort(array, lo, mid); // sort the left half\n\tsort(array, mid + 1, hi); // sort the right half\n\tmerge(array, lo, mid, hi); // merge results\n};\n\nexport const mergeSort = (array) => {\n\tmoments = [];\n\tmoments.push({ wholeArray: [...array], highlighted: [] });\n\taux = new Array(array.length).fill(0);\n\tsort(array, 0, array.length - 1);\n\n\tmoments.push({ wholeArray: [...array], highlighted: [] });\n\treturn moments;\n};\n"],"mappings":"AAAA,IAAIA,GAAG;AACP,IAAIC,OAAO,GAAG,EAAE;AAEhB,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,EAAE,EAAEC,GAAG,EAAEC,EAAE,KAAK;EACrC,IAAI,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAG,CAACJ,EAAE,EAAEC,GAAG,GAAG,CAAC,CAAC;EAE1B,KAAK,IAAII,CAAC,GAAGL,EAAE,EAAEK,CAAC,IAAIH,EAAE,EAAEG,CAAC,EAAE,EAAE;IAC9BT,GAAG,CAACS,CAAC,CAAC,GAAGN,KAAK,CAACM,CAAC,CAAC;EAClB;EAEA,KAAK,IAAIA,CAAC,GAAGL,EAAE,EAAEK,CAAC,IAAIH,EAAE,EAAEG,CAAC,EAAE,EAAE;IAC9BR,OAAO,CAACS,IAAI,CAAC;MAAEC,UAAU,EAAE,CAAC,GAAGR,KAAK,CAAC;MAAES,WAAW,EAAE,CAACH,CAAC,EAAEF,CAAC,EAAEC,CAAC;IAAE,CAAC,CAAC;IAChE,IAAID,CAAC,GAAGF,GAAG,EAAEF,KAAK,CAACM,CAAC,CAAC,GAAGT,GAAG,CAACQ,CAAC,EAAE,CAAC,CAAC,KAC5B,IAAIA,CAAC,GAAGF,EAAE,EAAEH,KAAK,CAACM,CAAC,CAAC,GAAGT,GAAG,CAACO,CAAC,EAAE,CAAC,CAAC,KAChC,IAAIP,GAAG,CAACQ,CAAC,CAAC,GAAGR,GAAG,CAACO,CAAC,CAAC,EAAEJ,KAAK,CAACM,CAAC,CAAC,GAAGT,GAAG,CAACQ,CAAC,EAAE,CAAC,CAAC,KACzCL,KAAK,CAACM,CAAC,CAAC,GAAGT,GAAG,CAACO,CAAC,EAAE,CAAC;EACzB;AACD,CAAC;AACD,MAAMM,IAAI,GAAGA,CAACV,KAAK,EAAEC,EAAE,EAAEE,EAAE,KAAK;EAC/B,IAAIA,EAAE,IAAIF,EAAE,EAAE;EACd,IAAIC,GAAG,GAAGS,IAAI,CAACC,KAAK,CAACX,EAAE,GAAG,CAACE,EAAE,GAAGF,EAAE,IAAI,CAAC,CAAC;EACxCS,IAAI,CAACV,KAAK,EAAEC,EAAE,EAAEC,GAAG,CAAC,CAAC,CAAC;EACtBQ,IAAI,CAACV,KAAK,EAAEE,GAAG,GAAG,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC;EAC1BJ,KAAK,CAACC,KAAK,EAAEC,EAAE,EAAEC,GAAG,EAAEC,EAAE,CAAC,CAAC,CAAC;AAC5B,CAAC;;AAED,OAAO,MAAMU,SAAS,GAAIb,KAAK,IAAK;EACnCF,OAAO,GAAG,EAAE;EACZA,OAAO,CAACS,IAAI,CAAC;IAAEC,UAAU,EAAE,CAAC,GAAGR,KAAK,CAAC;IAAES,WAAW,EAAE;EAAG,CAAC,CAAC;EACzDZ,GAAG,GAAG,IAAIiB,KAAK,CAACd,KAAK,CAACe,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACrCN,IAAI,CAACV,KAAK,EAAE,CAAC,EAAEA,KAAK,CAACe,MAAM,GAAG,CAAC,CAAC;EAEhCjB,OAAO,CAACS,IAAI,CAAC;IAAEC,UAAU,EAAE,CAAC,GAAGR,KAAK,CAAC;IAAES,WAAW,EAAE;EAAG,CAAC,CAAC;EACzD,OAAOX,OAAO;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}