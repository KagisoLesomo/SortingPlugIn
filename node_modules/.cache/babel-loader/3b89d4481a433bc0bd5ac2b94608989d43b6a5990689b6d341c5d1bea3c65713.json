{"ast":null,"code":"var _jsxFileName = \"/home/senzo/VS Code/sdp_1/src/Quicksort.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Quicksort.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quicksort() {\n  _s();\n  const [arr, setArr] = useState([]);\n  const [inputArr, setInputArr] = useState('');\n  const [isSorting, setIsSorting] = useState(false);\n  const handleInputChange = e => {\n    setInputArr(e.target.value);\n  };\n  const handleGenerateRandomArray = () => {\n    const randomArr = generateRandomArray(10);\n    setArr(randomArr);\n  };\n  const handleSortArray = () => {\n    setIsSorting(true);\n    const arrToSort = [...arr];\n    quicksort(arrToSort, 0, arrToSort.length - 1);\n    setArr(arrToSort);\n    setIsSorting(false);\n  };\n  const generateRandomArray = length => {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n      arr.push(Math.floor(Math.random() * 100));\n    }\n    return arr;\n  };\n  const quicksort = (arr, start, end) => {\n    if (start >= end) {\n      return;\n    }\n    const pivotIndex = partition(arr, start, end);\n    quicksort(arr, start, pivotIndex - 1);\n    quicksort(arr, pivotIndex + 1, end);\n  };\n  const partition = (arr, start, end) => {\n    const pivot = arr[end];\n    let i = start - 1;\n    for (let j = start; j < end; j++) {\n      if (arr[j] < pivot) {\n        i++;\n        swap(arr, i, j);\n      }\n    }\n    swap(arr, i + 1, end);\n    return i + 1;\n  };\n  const swap = (arr, i, j) => {\n    const temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quicksort-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter array (e.g., 1, 2, 3)\",\n        value: inputArr,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setArr(inputArr.split(',').map(Number)),\n        children: \"Use Input Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateRandomArray,\n        children: \"Generate Random Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortArray,\n        disabled: isSorting,\n        children: \"Sort Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: arr.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `circle ${num === arr[arr.length - 1] ? 'pivot' : ''} ${isSorting && num === arr[index - 1] ? 'highlight' : ''}`,\n        children: num\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Quicksort, \"HlRJ0nT6qVyXGbSeq8N2RCzebRQ=\");\n_c = Quicksort;\nexport default Quicksort;\nvar _c;\n$RefreshReg$(_c, \"Quicksort\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quicksort","_s","arr","setArr","inputArr","setInputArr","isSorting","setIsSorting","handleInputChange","e","target","value","handleGenerateRandomArray","randomArr","generateRandomArray","handleSortArray","arrToSort","quicksort","length","i","push","Math","floor","random","start","end","pivotIndex","partition","pivot","j","swap","temp","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","split","map","Number","disabled","num","index","_c","$RefreshReg$"],"sources":["/home/senzo/VS Code/sdp_1/src/Quicksort.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Quicksort.css';\n\nfunction Quicksort() {\n  const [arr, setArr] = useState([]);\n  const [inputArr, setInputArr] = useState('');\n  const [isSorting, setIsSorting] = useState(false);\n\n  const handleInputChange = (e) => {\n    setInputArr(e.target.value);\n  };\n\n  const handleGenerateRandomArray = () => {\n    const randomArr = generateRandomArray(10);\n    setArr(randomArr);\n  };\n\n  const handleSortArray = () => {\n    setIsSorting(true);\n    const arrToSort = [...arr];\n    quicksort(arrToSort, 0, arrToSort.length - 1);\n    setArr(arrToSort);\n    setIsSorting(false);\n  };\n\n  const generateRandomArray = (length) => {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n      arr.push(Math.floor(Math.random() * 100));\n    }\n    return arr;\n  };\n\n  const quicksort = (arr, start, end) => {\n    if (start >= end) {\n      return;\n    }\n\n    const pivotIndex = partition(arr, start, end);\n\n    quicksort(arr, start, pivotIndex - 1);\n    quicksort(arr, pivotIndex + 1, end);\n  };\n\n  const partition = (arr, start, end) => {\n    const pivot = arr[end];\n    let i = start - 1;\n\n    for (let j = start; j < end; j++) {\n      if (arr[j] < pivot) {\n        i++;\n        swap(arr, i, j);\n      }\n    }\n\n    swap(arr, i + 1, end);\n\n    return i + 1;\n  };\n\n  const swap = (arr, i, j) => {\n    const temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  };\n\n  return (\n    <div className=\"quicksort-container\">\n      <div className=\"options\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter array (e.g., 1, 2, 3)\"\n          value={inputArr}\n          onChange={handleInputChange}\n        />\n        <button onClick={() => setArr(inputArr.split(',').map(Number))}>\n          Use Input Array\n        </button>\n        <button onClick={handleGenerateRandomArray}>Generate Random Array</button>\n        <button onClick={handleSortArray} disabled={isSorting}>\n          Sort Array\n        </button>\n      </div>\n      <div className=\"array-container\">\n        {arr.map((num, index) => (\n          <div\n            key={index}\n            className={`circle ${num === arr[arr.length - 1] ? 'pivot' : ''} ${\n              isSorting && num === arr[index - 1] ? 'highlight' : ''\n            }`}\n          >\n            {num}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Quicksort;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}